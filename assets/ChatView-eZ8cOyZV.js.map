{"version":3,"file":"ChatView-eZ8cOyZV.js","sources":["../../src/components/Chat/BaseChatMessage.vue","../../src/components/Chat/BaseChatConference.vue","../../src/components/Chat/BaseChatCall.vue","../../src/components/Chat/BaseChat.vue","../../src/views/ChatView.vue"],"sourcesContent":["<template>\n  <div\n    class=\"base-chat-message-container\"\n    :data-message=\"chatMessage.id\"\n    :class=\"{ me }\"\n    @mouseover=\"onMouseover\"\n    @mouseleave=\"onMouseLeave\"\n  >\n    <div class=\"base-chat-message-content\" :class=\"{ me }\">\n      <BaseAvatar\n        v-if=\"hasAvatar\"\n        class=\"message-sms-content-avatar\"\n        size=\"1.5rem\"\n        :status=\"avatar.status\"\n        :src=\"avatar.src\"\n      />\n      <div v-else class=\"base-chat-message-not-avatar\" />\n      <div></div>\n      <div class=\"base-chat-message\">\n        <div v-if=\"content(chatMessage)\" v-html=\"content(chatMessage)\" />\n        <div\n          v-if=\"chatMessage.type === 'attachment'\"\n          class=\"base-chat-attachments\"\n        >\n          <AttachmentList\n            v-for=\"(file, index) in JSON.parse(chatMessage.content).files as FileAttachment[]\"\n            :key=\"index\"\n            :file-data=\"file\"\n          />\n        </div>\n      </div>\n      <DeleteAttachments\n        v-if=\"deleteAttachmentIsIsVisible && chatMessage.type === 'attachment' && me && filesAttachments(JSON.parse(chatMessage.content).files as FileAttachment[]).length > 0\"\n        :files=\"filesAttachments(JSON.parse(chatMessage.content).files as FileAttachment[])\"\n        :me=\"me\"\n        @change=\"setDeleteAttachmentIsOpen\"\n        @delete=\"handleSelectedAttachment\"\n      />\n    </div>\n    <BaseTimeBoxMessage\n      v-if=\"hasTime\"\n      :date-string=\"chatMessage.created_at\"\n      class=\"base-chat-message-time\"\n      :class=\"{ me }\"\n    />\n  </div>\n  <AttachmentDelete\n    v-if=\"modalDeleteAttachment\"\n    :file-data=\"fileData\"\n    @delete=\"(id) => handleDeleteAttachment(id, chatMessage.created_at, filesAttachments(JSON.parse(chatMessage.content).files as FileAttachment[]))\"\n    @close=\"modalDeleteAttachment = false\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type { ChatMessage } from '@/utils/db/types';\nimport BaseAvatar from '@/components/BaseAvatar.vue';\nimport { useAttachmentsComponent, useAvatar } from '@/composables';\nimport BaseTimeBoxMessage from '@/components/Chat/BaseTimeBoxMessage.vue';\nimport AttachmentList from '@/components/Attachments/AttachmentList.vue';\nimport type { FileAttachment } from '@/types';\nimport { computed } from 'vue';\nimport DeleteAttachments from '@/components/Attachments/DeleteAttachments.vue';\nimport AttachmentDelete from '@/components/Attachments/AttachmentDelete.vue';\n\ninterface Props {\n  chatMessage: ChatMessage;\n  me: boolean;\n  hasAvatar: boolean;\n  hasTime: boolean;\n}\n\nconst {\n  fileData,\n  filesAttachments,\n  modalDeleteAttachment,\n  deleteAttachmentIsIsVisible,\n  setDeleteAttachmentIsOpen,\n  handleDeleteAttachment,\n  handleSelectedAttachment,\n  onMouseover,\n  onMouseLeave,\n} = useAttachmentsComponent();\nconst props = defineProps<Props>();\n\nconst { avatar } = useAvatar({\n  me: props.me,\n  srcUser: props.chatMessage.src_user,\n});\n\nconst content = computed(() => {\n  return (chatMessage: ChatMessage) => {\n    if (chatMessage.type === 'attachment') {\n      return JSON.parse(chatMessage.content).message;\n    }\n\n    return chatMessage.content;\n  };\n});\n</script>\n\n<style scoped>\n.base-chat-message-container {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  padding: 8px 20px 0;\n  gap: 4px;\n}\n\n.base-chat-message-container.me {\n  align-items: end;\n}\n\n.base-chat-message-content {\n  display: flex;\n  gap: 4px;\n}\n\n.base-chat-message-not-avatar {\n  width: 24px;\n  height: 24px;\n}\n\n.base-chat-message-content.me {\n  flex-direction: row-reverse;\n}\n\n.base-chat-message-time {\n  padding-bottom: 8px;\n  margin-left: 32px;\n}\n\n.base-chat-message-time.me {\n  margin-left: 0;\n  margin-right: 32px;\n}\n\n.base-chat-message {\n  min-width: 250px;\n  max-width: 900px;\n  padding: 8px;\n  font-size: 14px;\n  line-height: 19px;\n  text-align: start;\n  border-radius: 5px;\n  color: var(--text-primary);\n  background-color: var(--white-500);\n  border: 1px solid var(--line);\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  word-break: break-word;\n  white-space: break-spaces;\n}\n\n.base-chat-attachments {\n  display: flex;\n  gap: 6px;\n  flex-wrap: wrap;\n}\n</style>\n\n<style>\n.base-chat-message p {\n  margin: 0;\n  color: var(--text-primary);\n}\n\n.base-chat-message ul {\n  margin: 0;\n}\n\n.base-chat-message blockquote {\n  border-left-color: #9fb3cd;\n  border-left-style: solid;\n  border-left-width: 2px;\n  color: var(--text-primary);\n  margin: 4px 0;\n  padding-left: 8px;\n}\n\n.base-chat-message code {\n  background-color: #f3f5f9;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  color: var(--text-primary);\n  font-size: 12px;\n  margin: 4px 0;\n  padding: 8px;\n  display: block;\n  white-space: normal;\n}\n</style>\n","<template>\n  <div class=\"author\">\n    <figure class=\"avatar\">\n      <IVideo />\n    </figure>\n  </div>\n  <div class=\"contents\">\n    <div class=\"bubble\">\n      <h2>{{ t('Meeting') }}</h2>\n      <div class=\"participants\">\n        <BaseAvatar\n          v-for=\"participant in contentObject.participants\"\n          :key=\"participant.user_id\"\n          :src=\"`${indexesStore.avatars[participant.user_id][32]}`\"\n          :status=\"undefined\"\n          size=\"1.5rem\"\n          :class=\"[\n            'cursor-pointer',\n            !participant.in_meeting ? 'leftConference' : '',\n          ]\"\n          :title=\"getNameByUserId(participant.user_id)\"\n        />\n        <p\n          v-if=\"confereceEnded(contentObject.status, props.message.created_at)\"\n        >\n          {{ t('Ended') }}\n        </p>\n        <button\n          v-else\n          class=\"primary-btn text-uppercase\"\n          @click=\"joinConference\"\n        >\n          {{ t('Join') }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport type { ChatMessage, ContentChatConference } from '@/utils/db/types';\nimport { computed, type ComputedRef } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useIndexesStore } from '@/stores/indexes';\nimport BaseAvatar from '@/components/BaseAvatar.vue';\nimport { useConferenceStore, useUserStore } from '@/stores';\nimport { confereceEnded } from '@/utils';\nimport IVideo from '@/components/Icons/IVideo.vue';\n\ninterface Props {\n  message: ChatMessage;\n}\n\nconst props = defineProps<Props>();\nconst { t } = useI18n();\nconst indexesStore = useIndexesStore();\nconst { acceptConference } = useConferenceStore();\nconst { getNameByUserId } = useUserStore();\n\nconst contentObject: ComputedRef<ContentChatConference> = computed(() => {\n  const content: ContentChatConference = JSON.parse(props.message.content);\n  content.participants.sort((a, b) => {\n    return Number(b.in_meeting) - Number(a.in_meeting);\n  });\n  return content;\n});\n\nfunction joinConference() {\n  const message = { ...props.message, read: Boolean(props.message.read) };\n  acceptConference({\n    message,\n    token: contentObject.value.token,\n  });\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n</style>\n","<template>\n  <div class=\"author\">\n    <figure class=\"avatar\">\n      <IPhone />\n    </figure>\n  </div>\n  <div\n    class=\"contents\"\n    :title=\"\n      props.message.src_user === loggedUserId\n        ? t('Called From') + ' ' + contentObject.src_number\n        : t('Received From') + ' ' + contentObject.dst_number\n    \"\n  >\n    <div class=\"bubble\">\n      <h2>{{ t('Call') }}</h2>\n      <p>\n        <BaseIcon\n          :name=\"\n            props.message.src_user === loggedUserId\n              ? 'arrow-up-right'\n              : 'arrow-down-left'\n          \"\n          :size=\"12\"\n        />\n        {{\n          props.message.src_user === loggedUserId\n            ? contentObject.dst_number\n            : contentObject.src_number\n        }}\n        &bull; {{ textStatusMessage }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { format } from 'date-fns';\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport type { ChatMessage, ContentCall } from '@/utils/db/types';\nimport { computed, type ComputedRef } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { Time } from '@/enums';\nimport { capitalize } from 'lodash';\nimport IPhone from '@/components/Icons/IPhone.vue';\n\ninterface Props {\n  message: ChatMessage;\n  loggedUserId: number;\n}\n\nconst props = defineProps<Props>();\nconst { t } = useI18n();\n\nconst contentObject: ComputedRef<ContentCall> = computed(() => {\n  return JSON.parse(props.message.content);\n});\n\nconst textStatusMessage: ComputedRef<string> = computed(() => {\n  if (contentObject.value.status == 'FINISHED') {\n    const duration = contentObject.value.duration as number;\n    if (duration < 60 * Time.Second) {\n      return format(duration, \"'\" + t('Lasted') + \"' s 'sec'\");\n    }\n\n    if (duration < 60 * Time.Minute) {\n      return format(duration, \"'\" + t('Lasted') + \"' m 'min' s 'sec'\");\n    }\n\n    return format(duration, \"'\" + t('Lasted') + \"' h 'hour' m 'min' s 'sec'\");\n  }\n\n  return t(capitalize(contentObject.value.status));\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n</style>\n","<template>\n  <div class=\"base-chat-container\">\n    <template\n      v-for=\"(chatMessage, index) in chatMessages\"\n      :key=\"chatMessage.id\"\n    >\n      <BaseDayDivider\n        v-if=\"isFirstMessageOfTheDay(chatMessages, index)\"\n        :date-string=\"chatMessage.created_at\"\n      />\n      <BaseChatMessage\n        v-if=\"chatMessage.type == 'message' || chatMessage.type == 'attachment'\"\n        :has-avatar=\"hasAvatar(chatMessages, index)\"\n        :has-time=\"hasTime(chatMessages, index)\"\n        :me=\"userStore.user.userId === chatMessage.src_user\"\n        :chat-message=\"chatMessage\"\n      />\n      <div\n        v-if=\"chatMessage.type == 'conference'\"\n        :data-message=\"chatMessage.id\"\n        :class=\"getClassArticle(chatMessage)\"\n      >\n        <BaseChatConference :message=\"chatMessage\" />\n      </div>\n      <div\n        v-if=\"chatMessage.type === 'call'\"\n        :data-message=\"chatMessage.id\"\n        :class=\"getClassArticle(chatMessage)\"\n      >\n        <BaseChatCall\n          :logged-user-id=\"userStore.user.userId\"\n          :message=\"chatMessage\"\n        />\n      </div>\n      <MessageSms\n        v-if=\"chatMessage.type === 'sms' && messageIsVisible(JSON.parse(chatMessage.content).status as Status[], userStore.user.userId === chatMessage.src_user)\"\n        :id=\"chatMessage.id\"\n        :date=\"chatMessage.created_at\"\n        :message=\"JSON.parse(chatMessage.content).content\"\n        :me=\"userStore.user.userId === chatMessage.src_user\"\n        :status=\"JSON.parse(chatMessage.content).status\"\n        :src-user=\"chatMessage.src_user\"\n        :dst-number=\"JSON.parse(chatMessage.content).dst_number\"\n        :src-number=\"JSON.parse(chatMessage.content).src_number\"\n      />\n      <BaseTimeBoxMessage\n        v-if=\"\n          chatMessage.type !== 'sms' &&\n          chatMessage.type !== 'message' &&\n          chatMessage.type !== 'attachment'\n        \"\n        :date-string=\"chatMessage.created_at\"\n        :class=\"getClassArticle(chatMessage)\"\n      />\n    </template>\n    <BaseTyping\n      v-if=\"isTyping\"\n      :class=\"{ 'mt-3': chatMessages.length === 0 }\"\n      :user-id=\"Number(userId)\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport BaseDayDivider from '@/components/Chat/BaseDayDivider.vue';\nimport BaseChatMessage from '@/components/Chat/BaseChatMessage.vue';\nimport BaseChatConference from '@/components/Chat/BaseChatConference.vue';\nimport BaseChatCall from '@/components/Chat/BaseChatCall.vue';\nimport MessageSms from '@/components/SMS/Content/ChatSms/MessageSms.vue';\nimport BaseTimeBoxMessage from '@/components/Chat/BaseTimeBoxMessage.vue';\nimport BaseTyping from '@/components/Chat/BaseTyping.vue';\nimport type { ChatMessage } from '@/utils/db/types';\nimport { useRoute } from 'vue-router';\nimport { useTyping } from '@/composables';\nimport { computed, ref, watchEffect } from 'vue';\nimport { useUserStore } from '@/stores';\nimport { format } from 'date-fns';\ninterface Props {\n  chatMessages: ChatMessage[];\n  height?: string;\n}\n\ninterface Status {\n  status: string;\n  date: string;\n}\ndefineProps<Props>();\n\nconst userStore = useUserStore();\n\nconst route = useRoute();\nconst { isTyping: typing } = useTyping();\n\nconst routeName = ref('');\nconst userId = ref<number>();\n\nconst isTyping = computed(() => {\n  return typing.value(routeName.value, userId.value);\n});\n\nfunction getClassArticle(message: ChatMessage) {\n  const userStore = useUserStore();\n  switch (message.type) {\n    case 'conference':\n      return message.src_user === userStore.user.userId\n        ? 'my party meeting item'\n        : 'party meeting item';\n    case 'call':\n      return message.src_user === userStore.user.userId\n        ? 'my call item'\n        : 'party call item';\n    default:\n      return message.src_user === userStore.user.userId\n        ? 'my message item'\n        : 'party message item';\n  }\n}\n\nconst isFirstMessageOfTheDay = computed(() => {\n  return (chatMessages: ChatMessage[], index: number) => {\n    const indexFirstElement = 0;\n\n    if (chatMessages.length === 1 || index === indexFirstElement) return true;\n    const currentDateFormatted = format(\n      new Date(chatMessages[index].created_at),\n      'dd-MM-yyyy'\n    );\n    const previousDateFormatted = format(\n      new Date(chatMessages[index - 1].created_at),\n      'dd-MM-yyyy'\n    );\n    return currentDateFormatted !== previousDateFormatted;\n  };\n});\n\nconst hasAvatar = computed(() => {\n  return (chatMessages: ChatMessage[], index: number) => {\n    const indexFirstElement = 0;\n\n    if (chatMessages.length === 1 || index === indexFirstElement) return true;\n\n    const currentType = chatMessages[index].type;\n    const previousType = chatMessages[index - 1].type;\n\n    const currentDateFormatted = format(\n      new Date(chatMessages[index].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const previousDateFormatted = format(\n      new Date(chatMessages[index - 1].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const currentSourceUser = chatMessages[index].src_user;\n    const previousSourceUser = chatMessages[index - 1].src_user;\n\n    if (\n      currentType !== 'message' ||\n      previousType !== 'message' ||\n      currentType !== previousType ||\n      currentSourceUser !== previousSourceUser ||\n      currentDateFormatted !== previousDateFormatted\n    )\n      return true;\n\n    const currentTimeFormatted = format(\n      new Date(chatMessages[index].created_at),\n      'hh:mm'\n    );\n\n    const previousTimeFormatted = format(\n      new Date(chatMessages[index - 1].created_at),\n      'hh:mm'\n    );\n\n    return currentTimeFormatted !== previousTimeFormatted;\n  };\n});\n\nconst hasTime = computed(() => {\n  return (chatMessages: ChatMessage[], index: number) => {\n    const indexLastElement = chatMessages.length - 1;\n\n    if (chatMessages.length === 1 || indexLastElement === index) return true;\n\n    const currentType = chatMessages[index].type;\n    const nextType = chatMessages[index + 1].type;\n\n    const currentDateFormatted = format(\n      new Date(chatMessages[index].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const nextDateFormatted = format(\n      new Date(chatMessages[index + 1].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const currentSourceUser = chatMessages[index].src_user;\n    const nextSourceUser = chatMessages[index + 1].src_user;\n\n    if (\n      currentType !== 'message' ||\n      nextType !== 'message' ||\n      currentType !== nextType ||\n      currentSourceUser !== nextSourceUser ||\n      currentDateFormatted !== nextDateFormatted\n    )\n      return true;\n\n    const currentTimeFormatted = format(\n      new Date(chatMessages[index].created_at),\n      'hh:mm'\n    );\n\n    const nextTimeFormatted = format(\n      new Date(chatMessages[index + 1].created_at),\n      'hh:mm'\n    );\n\n    return currentTimeFormatted !== nextTimeFormatted;\n  };\n});\n\nconst messageIsVisible = computed(() => {\n  return (status: Status[], me: boolean) => {\n    if (me) return true;\n\n    return status.some((s) => s.status !== 'failed');\n  };\n});\n\nwatchEffect(() => {\n  routeName.value = route.name as string;\n  userId.value = parseInt(route.params.id as string, 10);\n});\n</script>\n\n<style scoped lang=\"scss\">\n$marginMessage: 32px;\n$paddingTime: 16px;\n$authorSpace: 16px;\n\n.base-chat-container {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  height: v-bind('height');\n}\n\ntime.party,\ntime.my {\n  padding-top: 0;\n  padding-bottom: 16px;\n  margin-top: 4px;\n}\ntime.party {\n  margin-left: $marginMessage;\n  padding-left: $paddingTime;\n}\n\ntime.my {\n  margin-right: $marginMessage;\n  padding-right: $paddingTime;\n}\n\n.ql-editor.my,\n.ql-editor.party {\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-bottom: 4px;\n}\n\n.ql-editor.my {\n  margin-right: $marginMessage;\n  padding-right: $paddingTime;\n}\n\n.ql-editor.party {\n  margin-left: $marginMessage;\n  padding-left: $paddingTime;\n}\n\n.author {\n  position: absolute;\n  padding: 0;\n}\n\n.author.my {\n  right: $authorSpace;\n}\n\n.author.party {\n  left: $authorSpace;\n}\n\n.meeting,\n.call {\n  padding-bottom: 0;\n}\n\n.bubble.ql-editor {\n  max-height: fit-content;\n}\n</style>\n\n<style lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n</style>\n","<template>\n  <main id=\"chat-container\">\n    <div ref=\"panelRef\" class=\"panel\">\n      <div class=\"chat-header\">\n        <div class=\"chat-header-left\">\n          <SidebarToogle />\n          <div class=\"contact-info\" @click=\"showInfoPane\">\n            <BaseAvatar\n              :src=\"`${indexesStore.avatars[dstUser.userId][32]}`\"\n              size=\"1.5rem\"\n              :status=\"\n                (statusStore?.status[dstUser.userId]\n                  ?.status as unknown as UserStatusEnum) ?? 'offline'\n              \"\n            />\n            <GlobalText\n              as=\"h2\"\n              :size=\"16\"\n              :weight=\"700\"\n              color=\"brand-blue-500\"\n              class=\"m-0\"\n              >{{ dstUser.userName }}</GlobalText\n            >\n          </div>\n          <template v-if=\"subscribeStore.hasCallPresence(id)\">\n            <template\n              v-for=\"callPresence in subscribeStore.callsPresence[id]\"\n              :key=\"callPresence.callId\"\n            >\n              <PresenceCall\n                v-if=\"callPresence.state !== 'terminated'\"\n                :state=\"callPresence.state\"\n                :local-number=\"callPresence.localNumber\"\n                :remote-number=\"callPresence.remoteNumber\"\n                :direction=\"callPresence.direction\"\n                :user-id=\"id\"\n              />\n            </template>\n          </template>\n          <PresenceVideo\n            v-if=\"\n              presenceForMeetingStore.presenceForVideo[parseInt(id, 10)] ===\n              'on'\n            \"\n          />\n        </div>\n        <div class=\"chat-header-right chat-actions\">\n          <ul>\n            <li @click=\"toggleFavorite\">\n              <button\n                href=\"javascript:\"\n                class=\"favorite-container\"\n                :class=\"{ 'is-favorite': directory?.favorite }\"\n              >\n                <ChatStarYellow class=\"yellow\" />\n                <ChatStar class=\"blue\" />\n              </button>\n            </li>\n            <li>\n              <button\n                href=\"javascript:\"\n                class=\"call-container\"\n                :disabled=\"numbers.length === 0\"\n                @click=\"callToTheUser\"\n              >\n                <ChatPhone />\n              </button>\n            </li>\n            <li>\n              <button\n                href=\"javascript:\"\n                class=\"meeting-container\"\n                @click=\"newConference()\"\n              >\n                <ChatMeeting />\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"chat-body-outer d-flex\">\n        <div v-show=\"loadingMessages\" class=\"loading-messages\">\n          <BaseIcon\n            name=\"loader\"\n            class=\"feather feather-loader spin\"\n            size=\"md\"\n            :color=\"Color.SPAPrimary\"\n          />\n        </div>\n        <NoActivity\n          v-show=\"\n            !loadingMessages && !Object.keys(daysMessages).length && !typing\n          \"\n        />\n        <div\n          v-show=\"\n            (!loadingMessages && Object.keys(daysMessages).length) || typing\n          \"\n          class=\"chat-body-inner w-100\"\n        >\n          <perfect-scrollbar\n            ref=\"scrollbar\"\n            :watch-options=\"true\"\n            :options=\"{ suppressScrollY }\"\n            @ps-scroll-up=\"scrollUp\"\n            @ps-scroll-down=\"scrollDown\"\n          >\n            <BaseChat :chat-messages=\"daysMessages\" />\n          </perfect-scrollbar>\n        </div>\n        <div class=\"chat-sidebar\">\n          <perfect-scrollbar>\n            <div class=\"info-group\">\n              <h2>{{ t('Name') }}</h2>\n              <p>{{ dstUser.userName }}</p>\n            </div>\n            <div class=\"info-group\">\n              <h2>{{ t('Position') }}</h2>\n              <p>{{ dstUser?.settings?.jobTitle }}</p>\n            </div>\n            <div class=\"info-group\">\n              <h2>{{ t('Email') }}</h2>\n              <p>\n                <a :href=\"'mailto:' + dstUser?.settings?.email\">{{\n                  dstUser?.settings?.email\n                }}</a>\n              </p>\n            </div>\n            <div class=\"info-group\">\n              <h2>{{ t('Address') }}</h2>\n              <p>\n                {{ dstUser?.settings?.address1 }}<br />\n                <span v-if=\"dstUser?.settings?.address2\"\n                  >{{ dstUser?.settings?.address2\n                  }}<span\n                    v-if=\"dstUser?.settings?.city || dstUser?.settings?.state\"\n                    class=\"me-1\"\n                    >,</span\n                  >\n                </span>\n                <span v-if=\"dstUser?.settings?.city\"\n                  >{{ dstUser?.settings?.city\n                  }}<span v-if=\"dstUser?.settings?.state\" class=\"me-1\">,</span>\n                </span>\n                <span v-if=\"dstUser?.settings?.state\">\n                  {{ dstUser?.settings?.state }}\n                </span>\n              </p>\n            </div>\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <BaseEditor @height=\"changeHeight\" />\n    </div>\n  </main>\n  <NumbersList v-model=\"modalListNumbers\" :numbers=\"numbers\" />\n</template>\n\n<script setup lang=\"ts\">\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport {\n  onBeforeMount,\n  ref,\n  watch,\n  computed,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n} from 'vue';\nimport type { ComputedRef } from 'vue';\nimport type { Directory } from '@/types';\nimport {\n  usePresenceForMeetingStore,\n  useStatusStore,\n  useSubscribeStore,\n  useUserStore,\n  useWebrtcStore,\n} from '@/stores';\nimport { Color, RouteName, Time } from '@/enums';\nimport {\n  useChat,\n  useDeleteFavorite,\n  useSetFavorite,\n  useTyping,\n  useUserAgent,\n} from '@/composables';\nimport {\n  useConferenceStore,\n  useMessageStore,\n  useChatMessageVars,\n} from '@/stores';\nimport type { ChatMessage } from '@/utils/db/types';\nimport type { UserStatusEnum } from '@/types';\nimport { format } from 'date-fns';\nimport { collect } from 'collect.js';\nimport { useIndexesStore } from '@/stores/indexes';\nimport BaseAvatar from '@/components/BaseAvatar.vue';\nimport BaseChat from '@/components/Chat/BaseChat.vue';\nimport NumbersList from '@/components/ChatView/NumbersList.vue';\nimport { useElementSize } from '@vueuse/core';\nimport { toastError } from '@/utils';\nimport { useI18n } from 'vue-i18n';\nimport BaseEditor from '@/components/SMS/Fotter/BaseSmsFooter.vue';\nimport { checkInternetConnection } from '@/utils';\nimport { GlobalText } from '@/components/Global/Text';\nimport NoActivity from '@/components/Chat/NoActivity.vue';\nimport ChatStarYellow from '@/components/Chat/ChatStarYellow.vue';\nimport ChatStar from '@/components/Chat/ChatStar.vue';\nimport ChatPhone from '@/components/Chat/ChatPhone.vue';\nimport ChatMeeting from '@/components/Chat/ChatMeeting.vue';\nimport SidebarToogle from '@/components/Sidebar/SidebarToogle.vue';\nimport PresenceCall from '@/components/Presence/PresenceCall.vue';\nimport PresenceVideo from '@/components/Presence/PresenceVideo.vue';\n\ninterface PScrollBar {\n  $el: Element;\n  ps: {\n    contentHeight: number;\n    element: Element;\n  };\n}\n\nconst route = useRoute();\nconst router = useRouter();\nconst userStore = useUserStore();\nconst indexesStore = useIndexesStore();\nconst statusStore = useStatusStore();\nconst webrtcStore = useWebrtcStore();\nconst subscribeStore = useSubscribeStore();\nconst presenceForMeetingStore = usePresenceForMeetingStore();\nconst { t } = useI18n();\nconst { resize } = useChat();\n\nconst { newCall } = useUserAgent();\n\nconst directory = ref<Directory>();\nconst id = ref('');\nconst modalListNumbers = ref(false);\nconst { newConferenceIO } = useConferenceStore();\nconst {\n  newMessage,\n  getSyncInitial,\n  getBatchOfMessages,\n  messagesRead,\n  getOldMessages,\n  searchMessage,\n} = useMessageStore();\nconst messageVars = useChatMessageVars();\nconst { isTyping } = useTyping();\n\nconst scrollbar = ref<PScrollBar>();\nconst syncInitial = ref<boolean>(false);\nconst loadingMessages = ref<boolean>(true);\nconst loadMessages = ref(false);\nconst oldScrollTop = ref(0);\nconst oldScrollHeigth = ref(0);\nconst scrollTimeout = ref<ReturnType<typeof setTimeout>>();\nconst scrollTop = ref<number>(0);\nconst lastStatusHasInternetConnection = ref(true);\nconst scrollingDown = ref(false);\n\nwindow.addEventListener('online', checkConnection);\nwindow.addEventListener('offline', checkConnection);\n\nconst internetIntervalStatus = setInterval(async () => {\n  checkConnection();\n}, 30000);\n\nasync function checkConnection() {\n  const isOnline = await checkInternetConnection();\n  if (isOnline && lastStatusHasInternetConnection.value === false) {\n    loadSyncInitMessages();\n  }\n\n  lastStatusHasInternetConnection.value = isOnline;\n}\n\nconst typing = computed(() => {\n  const routeName = route.name as string;\n  const userId = parseInt(route.params.id as string, 10);\n  return isTyping.value(routeName, userId);\n});\nconst dstUser: ComputedRef<Directory> = computed(() => {\n  const userId = (route?.params?.id as string) ?? 0;\n  return indexesStore.directories[parseInt(userId)];\n});\n\nconst suppressScrollY = ref(false);\n\nconst numbers: ComputedRef<string[]> = computed(() => {\n  const team = userStore.teams.find(\n    (team) => team.userId.toString() === directory.value?.userId.toString(),\n  );\n\n  if (team) {\n    return team.assignedNumbers.map((number) => number.number);\n  }\n\n  return [];\n});\n\n//const chatMessages = ref<ChatMessage[] | undefined>([]);\n//@todo needs to type the daysMessages\nconst daysMessages: ComputedRef<ChatMessage[]> = computed(() => {\n  const chatMessages = collect(messageVars.current_chat.messages)\n    .sortBy('created_at')\n    .all();\n\n  chatMessages.map((row: ChatMessage) => {\n    row.day = format(new Date(row.created_at), 'yyyyMMdd');\n    row.minute = format(new Date(row.created_at), 'HHmm');\n    return row;\n  });\n\n  if (chatMessages.length) {\n    messageVars.setDataUser(\n      dstUser.value.userId,\n      chatMessages[0].created_at,\n      chatMessages[chatMessages.length - 1].created_at,\n    );\n  }\n  return collect(chatMessages).all();\n});\n\nfunction callToTheUser() {\n  if (webrtcStore.userAgentArray.length === 0) {\n    return toastError(t('No active number'));\n  }\n\n  if (numbers.value.length > 1) {\n    modalListNumbers.value = true;\n    return;\n  }\n\n  newCall(numbers.value[0], webrtcStore.userAgentActive);\n}\n\nfunction showInfoPane() {\n  document.querySelector('.chat-body-outer')?.classList.toggle('show-sidebar');\n}\n\nfunction setDirectory() {\n  id.value = route.params.id as string;\n\n  if (id.value) {\n    directory.value = userStore.directory(id.value.toString());\n  }\n}\n\nasync function toggleFavorite() {\n  if (directory.value?.favorite) {\n    await useDeleteFavorite(directory.value?.userId.toString());\n\n    if (route.name === RouteName.FavoriteDirectory) {\n      router.replace({ name: RouteName.Directory, params: { id: id.value } });\n    }\n    return (directory.value.favorite = false);\n  }\n  await useSetFavorite(directory.value?.userId.toString() as string, 'user');\n  (directory.value as Directory).favorite = true;\n}\n\nfunction send(content: string) {\n  if (content === '<p><br></p>') {\n    return;\n  }\n  newMessage(parseInt(id.value as string), content);\n}\n\nfunction newConference() {\n  newConferenceIO(parseInt(id.value as string));\n}\n\nfunction loadSyncInitMessages() {\n  loadingMessages.value = true;\n  suppressScrollY.value = true;\n  messageVars.initializeNewChatUser(parseInt(id.value));\n  syncInitial.value = true;\n  const dateCondition = route.query.dateCondition as string;\n  const messageId = route.query.messageId as string;\n  if (dateCondition) {\n    searchMessage(parseInt(id.value), dateCondition);\n  } else {\n    getSyncInitial(parseInt(id.value));\n  }\n  setTimeout(() => {\n    loadingMessages.value = false;\n\n    if (messageId) {\n      scrollTo(messageId);\n      window.history.pushState({}, document.title, window.location.pathname);\n    }\n  }, 500);\n  suppressScrollY.value = false;\n}\n\nfunction scrollTo(messageId = '') {\n  setTimeout(() => {\n    if (scrollbar.value) {\n      const scrollHeightElement = messageId\n        ? getScrollHeight(messageId)\n        : scrollbar.value?.$el.scrollHeight;\n      scrollbar.value.$el.scrollTop =\n        scrollHeightElement - scrollbar.value.$el.clientHeight;\n    }\n  }, 100);\n}\n\nwatch(\n  () => route.params,\n  (newParams, oldParams) => {\n    if (!Object.prototype.hasOwnProperty.call(route.params, 'id')) {\n      return;\n    }\n\n    if (newParams.id === oldParams.id) {\n      return;\n    }\n    indexesStore.enableScrollLock();\n    setDirectory();\n    loadSyncInitMessages();\n  },\n  { deep: true },\n);\n\nwatch(\n  () => messageVars.current_chat.messages,\n  (messages, oldMessages) => {\n    if (dstUser.value && dstUser.value.userId) {\n      messagesRead(dstUser.value.userId);\n    }\n    const scrollHeight =\n      (scrollbar.value?.$el.scrollHeight ?? 0) -\n      (scrollbar.value?.$el.clientHeight ?? 0);\n    const messageId = route.query.messageId as string;\n    nextTick(() => {\n      if (\n        !loadMessages.value &&\n        scrollTop.value >= 0.95 * scrollHeight &&\n        !messageId\n      ) {\n        scrollTo();\n      }\n      if (oldMessages.length === 0) {\n        setTimeout(() => {\n          loadingMessages.value = false;\n          if (!messageId) return scrollTo();\n\n          scrollTo(messageId);\n          window.history.pushState(\n            {},\n            document.title,\n            window.location.pathname,\n          );\n        }, 500);\n      }\n\n      if (\n        messages.length > 0 &&\n        oldMessages.length > 0 &&\n        loadMessages.value &&\n        !scrollingDown.value\n      ) {\n        const newScrollHeight = (scrollbar.value as PScrollBar).$el\n          .scrollHeight;\n        const diffScrollHeight = newScrollHeight - oldScrollHeigth.value;\n        (scrollbar.value as PScrollBar).$el.scrollTop =\n          oldScrollTop.value + diffScrollHeight;\n      }\n    });\n  },\n  { deep: true },\n);\n\nonBeforeMount(() => {\n  setDirectory();\n  loadSyncInitMessages();\n});\n\nonBeforeUnmount(() => {\n  clearInterval(internetIntervalStatus);\n});\n\nasync function scrollUp(event: Event) {\n  clearTimeout(scrollTimeout.value);\n  indexesStore.disableScrollLock();\n  const target = event.target as HTMLDivElement;\n  scrollTop.value = target.scrollTop;\n  const scrollHeight = target.scrollHeight;\n\n  if (loadMessages.value) return;\n\n  if (\n    (scrollTop.value <= 0.15 * scrollHeight &&\n      scrollTop.value >= 0.1 * scrollHeight) ||\n    scrollTop.value === 0\n  ) {\n    loadMessages.value = true;\n    oldScrollTop.value = scrollTop.value;\n    oldScrollHeigth.value = scrollHeight;\n    await getOldMessages(dstUser.value.userId);\n\n    setTimeout(() => {\n      loadMessages.value = false;\n    }, 2.5 * Time.Second);\n  }\n}\n\nfunction scrollDown(event: Event) {\n  clearTimeout(scrollTimeout.value);\n  if (syncInitial.value) {\n    syncInitial.value = false;\n    return;\n  }\n\n  if (loadMessages.value) return;\n\n  const target = event.target as HTMLDivElement;\n  const offsetHeight = target.offsetHeight;\n  scrollTop.value = target.scrollTop;\n  const scrollHeight = target.scrollHeight;\n  if (\n    offsetHeight + scrollTop.value >= 0.85 * scrollHeight &&\n    offsetHeight + scrollTop.value <= 0.95 * scrollHeight\n  ) {\n    loadMessages.value = true;\n    scrollingDown.value = true;\n    oldScrollTop.value = scrollTop.value;\n    oldScrollHeigth.value = scrollHeight;\n    messagesRead(dstUser.value.userId);\n    getBatchOfMessages(dstUser.value.userId, 'newest');\n    setTimeout(() => {\n      loadMessages.value = false;\n      scrollingDown.value = false;\n    }, 2.5 * Time.Second);\n  }\n\n  if (offsetHeight + scrollTop.value >= 0.98 * scrollHeight) {\n    indexesStore.enableScrollLock();\n  }\n}\n\nconst panelRef = ref<HTMLDivElement>();\nconst panelWidth = ref(0);\nconst { width } = useElementSize(panelRef);\n\nwatch(width, (value) => (panelWidth.value = value));\nwatch(typing, (newTyping) => {\n  const scrollHeight =\n    (scrollbar.value?.$el.scrollHeight ?? 0) -\n    (scrollbar.value?.$el.clientHeight ?? 0);\n  if (newTyping && scrollTop.value >= 0.95 * scrollHeight) {\n    scrollTo();\n  }\n});\n\nfunction getScrollHeight(id: string) {\n  const element = document.querySelector<HTMLElement>(`[data-message=\"${id}\"]`);\n\n  let scrollHeightElement = 0;\n  if (element) {\n    const offsetTopElement = element.offsetTop;\n    const clientHeightElement = element.clientHeight;\n    scrollHeightElement = offsetTopElement + clientHeightElement;\n  }\n\n  return scrollHeightElement > 0 ? scrollHeightElement : 0;\n}\n\nfunction changeHeight(diff: number) {\n  if (scrollbar.value) {\n    const scrollTop = scrollbar.value.$el.scrollTop;\n    scrollbar.value.$el.scrollTop = scrollTop + diff;\n  }\n}\n\nonMounted(() => {\n  resize();\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n</style>\n"],"names":["fileData","filesAttachments","modalDeleteAttachment","deleteAttachmentIsIsVisible","setDeleteAttachmentIsOpen","handleDeleteAttachment","handleSelectedAttachment","onMouseover","onMouseLeave","useAttachmentsComponent","props","__props","avatar","useAvatar","content","computed","chatMessage","t","useI18n","indexesStore","useIndexesStore","acceptConference","useConferenceStore","getNameByUserId","useUserStore","contentObject","a","b","joinConference","message","textStatusMessage","duration","Time","format","capitalize","userStore","route","useRoute","typing","useTyping","routeName","ref","userId","isTyping","getClassArticle","isFirstMessageOfTheDay","chatMessages","index","currentDateFormatted","previousDateFormatted","hasAvatar","currentType","previousType","currentSourceUser","previousSourceUser","currentTimeFormatted","previousTimeFormatted","hasTime","indexLastElement","nextType","nextDateFormatted","nextSourceUser","nextTimeFormatted","messageIsVisible","status","me","watchEffect","router","useRouter","statusStore","useStatusStore","webrtcStore","useWebrtcStore","subscribeStore","useSubscribeStore","presenceForMeetingStore","usePresenceForMeetingStore","resize","useChat","newCall","useUserAgent","directory","id","modalListNumbers","newConferenceIO","newMessage","getSyncInitial","getBatchOfMessages","messagesRead","getOldMessages","searchMessage","useMessageStore","messageVars","useChatMessageVars","scrollbar","syncInitial","loadingMessages","loadMessages","oldScrollTop","oldScrollHeigth","scrollTimeout","scrollTop","lastStatusHasInternetConnection","scrollingDown","checkConnection","internetIntervalStatus","isOnline","checkInternetConnection","loadSyncInitMessages","dstUser","_a","suppressScrollY","numbers","team","number","daysMessages","collect","row","callToTheUser","toastError","showInfoPane","setDirectory","toggleFavorite","useDeleteFavorite","_b","RouteName","useSetFavorite","_c","newConference","dateCondition","messageId","scrollTo","scrollHeightElement","getScrollHeight","watch","newParams","oldParams","messages","oldMessages","scrollHeight","nextTick","diffScrollHeight","onBeforeMount","onBeforeUnmount","scrollUp","event","target","scrollDown","offsetHeight","panelRef","panelWidth","width","useElementSize","value","newTyping","element","offsetTopElement","clientHeightElement","changeHeight","diff","onMounted"],"mappings":"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"}