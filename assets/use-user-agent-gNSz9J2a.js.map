{"version":3,"file":"use-user-agent-gNSz9J2a.js","sources":["../../src/enums/keypad.ts","../../node_modules/date-fns/differenceInMilliseconds.mjs","../../src/constants/call-options.ts","../../src/composables/use-call.ts","../../src/composables/use-user-agent.ts"],"sourcesContent":["export enum Keypad {\n  Asterisk = '*',\n  Hashtag = '#',\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import type { AnswerOptions, MediaConstraints } from 'jssip/lib/RTCSession';\n\nconst mediaConstraints: MediaConstraints = {\n  audio: true,\n  video: false,\n};\n\nconst iceServers: RTCIceServer = {\n  urls: [],\n};\n\nconst pcConfig: RTCConfiguration = {\n  iceServers: [iceServers],\n};\n\nconst rtcOfferConstraints: RTCOfferOptions = {\n  offerToReceiveAudio: true,\n  offerToReceiveVideo: false,\n};\n\nconst rtcAnswerConstraints: RTCOfferOptions = {\n  offerToReceiveAudio: true,\n  offerToReceiveVideo: false,\n};\n\nexport const options: AnswerOptions = {\n  mediaConstraints,\n  rtcOfferConstraints,\n  rtcAnswerConstraints,\n};\n","import { ref, computed, watchEffect } from 'vue';\nimport AudioTrackMixer from 'audio-track-mixer';\nimport { useWebrtcStore } from '@/stores';\nimport type {\n  CallListener,\n  ConfirmedListener,\n  EndListener,\n  RenegotiateOptions,\n  ReferOptions,\n  DTFMOptions,\n} from 'jssip/lib/RTCSession';\nimport { DTMF_TRANSPORT } from 'jssip/lib/Constants';\nimport { options } from '@/constants';\nimport { Time } from '@/enums';\nimport { saveAudio, toastSuccess } from '@/utils';\nimport type { NewSession } from '@/types';\nimport ysFixWebmDuration from 'fix-webm-duration';\n\nexport function useCall(call: NewSession) {\n  call?.setMaxListeners(50);\n  const webrtc = useWebrtcStore();\n\n  const mediaRecorder = ref<null | MediaRecorder>(null);\n  const isRecording = ref(false);\n\n  const hasSession = computed(() => Object.entries(call).length > 0);\n\n  const isMuted = ref(call?.isMuted().audio ?? false);\n\n  const isOnHold = ref(call?.isOnHold().local ?? false);\n\n  const isEnded = computed(() => {\n    if (hasSession.value) {\n      return call?.isEnded();\n    }\n    return null;\n  });\n\n  const displayName = computed(() => {\n    if (hasSession.value) {\n      return call?.local_identity.display_name;\n    }\n    return null;\n  });\n\n  const localNumber = computed(() => {\n    if (hasSession.value) {\n      return call?.local_identity.uri.user;\n    }\n    return null;\n  });\n\n  const remoteNumber = computed(() => {\n    if (hasSession.value) {\n      const remoteNumber = call.remote_identity.uri.user;\n      const dtmfTakeCall = '*89';\n      return remoteNumber.startsWith(dtmfTakeCall)\n        ? remoteNumber.replace(dtmfTakeCall, '')\n        : call?.remote_identity.uri.user;\n    }\n    return null;\n  });\n\n  const localName = computed(() => {\n    if (hasSession.value) {\n      return call?.local_identity.display_name;\n    }\n    return null;\n  });\n\n  const remoteName = computed(() => {\n    if (hasSession.value) {\n      return call?.remote_identity.display_name;\n    }\n    return null;\n  });\n\n  const direction = computed(() => {\n    if (hasSession.value) {\n      return call?.direction;\n    }\n    return null;\n  });\n\n  const startTime = ref<Date | undefined>(call?.start_time);\n\n  const endTime = ref<Date | undefined>(call?.end_time);\n\n  function hold() {\n    call?.hold();\n    isOnHold.value = true;\n  }\n\n  function unhold() {\n    call?.unhold();\n    isOnHold.value = false;\n  }\n\n  function mute() {\n    call.mute();\n    isMuted.value = true;\n  }\n\n  function unmute() {\n    call.unmute();\n    isMuted.value = false;\n  }\n\n  function terminate() {\n    call?.terminate();\n  }\n\n  function renegotiate(opt?: RenegotiateOptions) {\n    call?.renegotiate(opt);\n  }\n\n  function answer() {\n    call.answer(options);\n  }\n\n  function refer(number: string, opt?: ReferOptions) {\n    call?.refer(number, opt);\n  }\n\n  function toggleMute() {\n    if (isMuted.value) {\n      return unmute();\n    }\n\n    mute();\n  }\n\n  function toggleHold() {\n    if (isOnHold.value) {\n      return unhold();\n    }\n\n    hold();\n  }\n\n  function onConfirmed(callback: ConfirmedListener) {\n    call?.on('confirmed', callback);\n  }\n\n  function onAccepted(callback: CallListener) {\n    call?.on('accepted', callback);\n  }\n\n  function onEnded(callback: EndListener) {\n    call?.on('ended', callback);\n  }\n\n  function onFailed(callback: EndListener) {\n    call?.on('failed', callback);\n  }\n\n  function ignore() {\n    webrtc.removeSession(call);\n  }\n\n  function getRemoteTrack() {\n    return call?.connection.getReceivers()[0].track;\n  }\n\n  function getLocalTrack() {\n    return call?.connection.getSenders()[0].track;\n  }\n\n  const starstartTimeRecord = ref(0);\n\n  function startRecording() {\n    isRecording.value = true;\n\n    const mix = new AudioTrackMixer();\n    mix.addTrack(getRemoteTrack());\n    mix.addTrack(getLocalTrack() as MediaStreamTrack);\n    const mixedTrack = mix.getMixedTrack();\n    const mixedMediaStream = new MediaStream([mixedTrack]);\n    mediaRecorder.value = new MediaRecorder(mixedMediaStream, {\n      mimeType: 'audio/webm',\n      audioBitsPerSecond: 128000,\n    });\n    mediaRecorder.value.start();\n    starstartTimeRecord.value = Date.now();\n\n    mediaRecorder.value.ondataavailable = (event) => {\n      recordingStreamHandler(event);\n    };\n  }\n\n  function stopRecording() {\n    if (mediaRecorder.value?.state !== 'inactive') {\n      isRecording.value = false;\n      mediaRecorder.value?.stop();\n    }\n  }\n\n  async function recordingStreamHandler(event: BlobEvent) {\n    const chunks: Blob[] = [];\n    chunks.push(event.data);\n\n    if (mediaRecorder.value?.state === 'inactive') {\n      const duration = Date.now() - starstartTimeRecord.value;\n      const blob = new Blob(chunks, { type: event.type });\n\n      const fixedBlob = await ysFixWebmDuration(blob, duration);\n      const filename =\n        localNumber.value +\n        '_' +\n        remoteNumber.value +\n        '_' +\n        Date.now() +\n        '.webm';\n\n      const file = new File([fixedBlob], filename);\n\n      try {\n        await saveAudio(file);\n        toastSuccess('Audio saved');\n        mediaRecorder.value = null;\n      } catch (e) {\n        mediaRecorder.value = null;\n      } finally {\n        starstartTimeRecord.value = 0;\n      }\n    }\n  }\n\n  function toggleRecording() {\n    if (isRecording.value) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  }\n\n  function sendDTMF(digit: string | number) {\n    const dtmfOptions: DTFMOptions = {\n      transportType: DTMF_TRANSPORT.RFC2833,\n      duration: 10,\n      interToneGap: 10,\n    };\n    call?.sendDTMF(digit, dtmfOptions);\n  }\n\n  if (hasSession.value) {\n    let interval: ReturnType<typeof setInterval>;\n\n    call.on('connecting', () => {\n      mute();\n    });\n\n    call?.on('confirmed', () => {\n      startTime.value = call.start_time;\n      unmute();\n\n      interval = setInterval(() => {\n        isMuted.value = call.isMuted().audio as boolean;\n        isOnHold.value = call.isOnHold().local;\n      }, Time.Second);\n    });\n\n    call?.on('ended', () => {\n      stopRecording();\n      clearInterval(interval);\n    });\n\n    call?.on('failed', () => {\n      stopRecording();\n      clearInterval(interval);\n    });\n\n    call?.on('sdp', (data) => {\n      if (data.sdp.length > 4000) {\n        const positionX = data.sdp.indexOf('a=rtpmap:102 H264/90000');\n        if (positionX !== -1) {\n          const modifiedString = data.sdp.substring(0, positionX);\n          data.sdp = modifiedString;\n        }\n      }\n    });\n\n    watchEffect(() => {\n      isMuted.value = call.isMuted().audio as boolean;\n      isOnHold.value = call.isOnHold().local;\n    });\n  }\n\n  return {\n    call,\n    hasSession,\n    isMuted,\n    isOnHold,\n    isEnded,\n    isRecording,\n    displayName,\n    localNumber,\n    remoteNumber,\n    localName,\n    remoteName,\n    direction,\n    startTime,\n    endTime,\n    terminate,\n    renegotiate,\n    answer,\n    refer,\n    toggleMute,\n    toggleHold,\n    onConfirmed,\n    onAccepted,\n    onEnded,\n    onFailed,\n    ignore,\n    toggleRecording,\n    sendDTMF,\n    unmute,\n  };\n}\n","import { ref, computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport {\n  useCallsStore,\n  useIndexesStore,\n  useKeypadStore,\n  useMediaDeviceStore,\n  useMessageStore,\n  useSubscribeStore,\n  useToastStore,\n  useUserStore,\n  useWebrtcStore,\n} from '@/stores';\nimport JsSIP from 'jssip';\nimport type { Session } from '@/types';\nimport { extractNumber, phoneMasked, toastWarning } from '@/utils';\nimport type {\n  IncomingMessageEvent,\n  IncomingRTCSessionEvent,\n  OutgoingMessageEvent,\n  OutgoingRTCSessionEvent,\n  UA,\n} from 'jssip/lib/UA';\nimport type { UserAgent } from '@/types';\nimport { options } from '@/constants';\nimport { useCall } from '@/composables/use-call';\nimport type { RTCSession, SessionDirection } from 'jssip/lib/RTCSession';\nimport { differenceInMilliseconds } from 'date-fns';\nimport { useRoute } from 'vue-router';\nimport { Keypad, RouteName } from '@/enums';\nimport type { Subscriber } from 'jssip/lib/Subscriber';\n\nexport const useUserAgent = () => {\n  const sessions = ref<Record<string, Session>>({});\n  const subscribes: Map<string, Subscriber> = new Map();\n  const { t } = useI18n();\n  const hasSessions = computed(() => Object.entries(sessions.value).length > 0);\n  const webrtcStore = useWebrtcStore();\n  const mediaDeviceStore = useMediaDeviceStore();\n  const userStore = useUserStore();\n  const indexesStore = useIndexesStore();\n  const callStore = useCallsStore();\n  const messageStore = useMessageStore();\n  const route = useRoute();\n  const toastStore = useToastStore();\n  const keypadStore = useKeypadStore();\n\n  function getUserAgentConfiguration(\n    username: string,\n    password: string,\n    displayName?: string\n  ) {\n    JsSIP.debug.disable();\n    if (import.meta.env.VITE_JSSIP_DEBUG == 'true') {\n      JsSIP.debug.enable('JsSIP:*');\n    }\n    const uri = `sip:${username}@${userStore.sipHost.host}`;\n    const websocketProxyUrl = userStore.sipHost.websocket;\n    const socket = new JsSIP.WebSocketInterface(websocketProxyUrl);\n    return {\n      sockets: [socket],\n      uri: uri,\n      password: password,\n      realm: userStore.sipHost.host,\n      contact_uri: uri,\n      display_name: displayName,\n      no_answer_timeout: 120,\n      register: true,\n      session_timers: false,\n      session_timers_force_refresher: true,\n      session_timers_refresh_method: 'invite',\n      user_agent: import.meta.env.VITE_APP_NAME + '-WebApp',\n    };\n  }\n\n  function inCall(session: RTCSession) {\n    const { startTime, endTime, localNumber, remoteNumber, direction } =\n      useCall(session);\n    const existsDuration = !!startTime.value && !!endTime.value;\n\n    return {\n      startTime,\n      endTime,\n      localNumber,\n      remoteNumber,\n      direction,\n      existsDuration,\n    };\n  }\n\n  function setCall(session: RTCSession) {\n    const {\n      startTime,\n      endTime,\n      localNumber,\n      remoteNumber,\n      direction,\n      existsDuration,\n    } = inCall(session);\n    const duration = existsDuration\n      ? differenceInMilliseconds(endTime.value as Date, startTime.value as Date)\n      : null;\n    callStore.setCall({\n      direction: direction.value as SessionDirection,\n      status: existsDuration\n        ? 'Finished'\n        : session.direction === 'outgoing'\n        ? 'Cancelled'\n        : 'Missed',\n      callId: session.id,\n      date: startTime.value ?? new Date(),\n      duration,\n      localNumber: localNumber.value as string,\n      remoteNumber: remoteNumber.value as string,\n    });\n    if (session.direction === 'outgoing') {\n      messageStore.updateCallMessage(\n        session.id,\n        existsDuration ? 'FINISHED' : 'MISSED',\n        duration\n      );\n    }\n  }\n\n  function onEnded(session: RTCSession) {\n    const { existsDuration, direction } = inCall(session);\n    keypadStore.setHasTransfer(false);\n    keypadStore.setPhoneSelected({ name: '', number: '' });\n    if (\n      (route.name !== RouteName.Activity || callStore.type !== 'call') &&\n      !existsDuration &&\n      direction.value === 'incoming'\n    ) {\n      callStore.incrementCountCalls();\n    }\n    setCall(sessions.value[session.id] as RTCSession);\n    delete sessions.value[session.id];\n    webrtcStore.removeSession(session);\n\n    if (\n      webrtcStore.isTransferring &&\n      webrtcStore.transfer.from?.id === session.id\n    ) {\n      webrtcStore.setTransfer({});\n    }\n\n    const codeConference = '3232100';\n    if (session.remote_identity.uri.user.startsWith(codeConference)) {\n      keypadStore.clearConferenceSession();\n      keypadStore.setConferenceRoom('');\n      keypadStore.setInConference({\n        remoteNumber: '',\n        room: '',\n      });\n    }\n\n    if (\n      session.remote_identity.uri.user.includes(\n        keypadStore.inConference.remoteNumber\n      )\n    ) {\n      keypadStore.setInConference({\n        remoteNumber: '',\n        room: '',\n      });\n    }\n  }\n\n  function conference() {\n    const codeConference = '3232100';\n    const sessionConference =\n      webrtcStore.findSessionStartWithByCode(codeConference);\n\n    if (sessionConference) {\n      keypadStore.setConferenceInProgress(false);\n      return;\n    }\n\n    const sessionsActive = webrtcStore.sessionsArray.filter((session) =>\n      keypadStore.conference.sessions.some((conferenceSession) =>\n        session.remote_identity.uri.user.includes(conferenceSession.number)\n      )\n    );\n\n    if (sessionsActive.length === 0 && keypadStore.conference.inProgress) {\n      keypadStore.setConferenceInProgress(false);\n      webrtcStore.userAgentActive.ua.call(keypadStore.conference.room, options);\n    }\n  }\n\n  function newMessage(e: IncomingMessageEvent | OutgoingMessageEvent) {\n    if (e.originator === 'local') return;\n\n    const body = JSON.parse(e.request.body);\n\n    if (body.type === 'conference') {\n      keypadStore.setInConference({\n        room: body.message.room,\n        remoteNumber: body.message.remoteNumber,\n      });\n    }\n  }\n\n  function setUserAgentEvents(userAgent: JsSIP.UA, number: string) {\n    const subscribeStore = useSubscribeStore();\n\n    userAgent.setMaxListeners(20);\n    userAgent.on('registrationFailed', (event) => {\n      const index = userStore.findIndexMyNumbersByNumber(number);\n      userStore.myNumbers[index].registrationFailed = event.cause;\n      toastStore.newPhone({\n        id: window.crypto.randomUUID(),\n        title: number,\n        variant: 'phone',\n        message: t('Number registration failed'),\n      });\n    });\n    userAgent.on('registered', async () => {\n      subscribeStore.newsubscribe(userAgent);\n\n      const index = userStore.findIndexMyNumbersByNumber(number);\n      userStore.myNumbers[index].registrationFailed = '';\n      // const isDefault = await numberIsDefault(number);\n      const isDefault = true;\n      if (webrtcStore.userAgentArray.length === 0 || isDefault) {\n        webrtcStore.setUserAgentActive({\n          number,\n          ua: userAgent,\n        });\n      }\n      webrtcStore.setUserAgentArray({\n        number,\n        ua: userAgent,\n      });\n\n      if (\n        indexesStore.registeredNumbers[number] === undefined ||\n        !indexesStore.registeredNumbers[number]\n      ) {\n        toastStore.newPhone({\n          id: window.crypto.randomUUID(),\n          title: number,\n          variant: 'phone',\n          message: t('Number has been registered'),\n        });\n        indexesStore.updateNumberRegistering(number, true);\n      }\n      // updateNumberRegistered(number, true);\n    });\n\n    userAgent.on('unregistered', (event) => {\n      const number = event.response ? event.response.from.uri.user : null;\n      if (number) {\n        webrtcStore.removeUserAgent(number);\n\n        if (indexesStore.registeredNumbers[number] !== undefined) {\n          toastStore.newPhone({\n            id: window.crypto.randomUUID(),\n            title: number,\n            variant: 'phone',\n            message: t('Number has been unregistered'),\n          });\n          indexesStore.updateNumberRegistering(number, false);\n        }\n        throw { message: `The number was unregistered(${number})`, event };\n      }\n    });\n\n    userAgent.on(\n      'newMessage',\n      (e: IncomingMessageEvent | OutgoingMessageEvent) => {\n        newMessage(e);\n      }\n    );\n\n    userAgent.on(\n      'newRTCSession',\n      async (e: IncomingRTCSessionEvent | OutgoingRTCSessionEvent) => {\n        keypadStore.setHasNewCall(false);\n\n        if (e.session.direction === 'outgoing') {\n          const remoteNumber = e.session.remote_identity.uri.user;\n\n          messageStore.newCallMessage(\n            e.session.id,\n            e.session.local_identity.uri.user,\n            e.session.remote_identity.uri.user\n          );\n\n          if (\n            remoteNumber.startsWith('3232100') &&\n            !keypadStore.conference.room\n          ) {\n            keypadStore.setInConference({\n              room: remoteNumber,\n              remoteNumber: '',\n            });\n          }\n        }\n\n        const dndNumberEnable = userStore.myNumbers.find(\n          (number) =>\n            number.numbersUnmasked === e.session.local_identity.uri.user &&\n            number.dnd !== undefined &&\n            number.dnd\n        );\n\n        //when do not disturb block the call\n        if (\n          (userStore.onlineStatus === 'dnd' || dndNumberEnable) &&\n          e.session.direction === 'incoming'\n        ) {\n          e.session.terminate();\n          return;\n        }\n\n        sessions.value[e.session.id] = e.session;\n        if (!webrtcStore.isTransferring) {\n          webrtcStore.setSessionActive(e.session);\n          webrtcStore.setSessionsArray(e.session);\n        }\n\n        if (sessions.value[e.session.id].direction === 'outgoing') {\n          sessions.value[e.session.id].connection.addEventListener(\n            'track',\n            async (event) => {\n              const remoteAudio = new Audio() as HTMLAudioElement & {\n                setSinkId(deviceId: string): void;\n              };\n              if (mediaDeviceStore.currentSpeaker) {\n                remoteAudio.setSinkId(mediaDeviceStore.currentSpeaker.deviceId);\n              }\n              remoteAudio.srcObject = event.streams[0];\n              remoteAudio.play();\n              webrtcStore.setRemoteAudioStream(e.session.id, event.streams[0]);\n            }\n          );\n        }\n\n        sessions.value[e.session.id].on('peerconnection', (data) => {\n          data.peerconnection.addEventListener('track', async (event) => {\n            const remoteAudio = new Audio() as HTMLAudioElement & {\n              setSinkId(deviceId: string): void;\n            };\n            if (mediaDeviceStore.currentSpeaker) {\n              remoteAudio.setSinkId(\n                (mediaDeviceStore.currentSpeaker as MediaDeviceInfo).deviceId\n              );\n            }\n            remoteAudio.srcObject = event.streams[0];\n            remoteAudio.play();\n            webrtcStore.setRemoteAudioStream(e.session.id, event.streams[0]);\n          });\n        });\n\n        sessions.value[e.session.id].on('update', (ev) => {\n          console.log('update', ev);\n        });\n\n        sessions.value[e.session.id].on('ended', (ev) => {\n          console.log('remote end', ev);\n\n          onEnded(e.session);\n          conference();\n        });\n\n        sessions.value[e.session.id].on('failed', (ev) => {\n          console.log('remote failed', ev);\n          onEnded(e.session);\n        });\n      }\n    );\n\n    userAgent.on('disconnected', (event) => {\n      throw { message: 'Sip-Websocket was disconnected', event };\n    });\n  }\n\n  async function register(\n    username: string,\n    password: string,\n    displayName?: string\n  ) {\n    const numberDetails = userStore.myNumbers.find(\n      (number) => number.numbersUnmasked === username\n    );\n\n    //prevent numbers set as no register to register\n    if (!numberDetails || !numberDetails.active) {\n      return;\n    }\n\n    if (!webrtcStore.hasUserAgentByNumber(username)) {\n      const userAgent = new JsSIP.UA(\n        getUserAgentConfiguration(username, password, displayName)\n      );\n      userAgent.start();\n      setUserAgentEvents(userAgent, username);\n      return userAgent;\n    }\n  }\n\n  async function unregister(number: string) {\n    const userAgentArray = [...webrtcStore.userAgentArray];\n    const subscribeStore = useSubscribeStore();\n\n    const index = userAgentArray.findIndex((ua) => ua.number === number);\n    if (index !== -1) {\n      const userAgent = userAgentArray[index];\n\n      if (userAgent.ua.isConnected()) {\n        userAgent.ua.stop();\n      }\n\n      webrtcStore.removeUserAgent(number);\n\n      if (webrtcStore.userAgentArray.length === 0) {\n        subscribeStore.unSubscribe();\n        return;\n      }\n\n      if (index === 0) {\n        subscribeStore.newsubscribe(webrtcStore.userAgentArray[index].ua);\n      }\n    }\n  }\n\n  function newCall(\n    number: string,\n    userAgent: UserAgent | null | undefined = null\n  ) {\n    if (!number) {\n      return toastWarning(t('Dial a number to make the call'));\n    }\n\n    const numbersUnmasked =\n      number.startsWith(Keypad.Asterisk) || number.startsWith(Keypad.Hashtag)\n        ? number\n        : extractNumber(phoneMasked(number));\n\n    if (userStore.myNumbers.length > 0) {\n      for (const row of userStore.myNumbers) {\n        if (row.numbersUnmasked === numbersUnmasked) return;\n      }\n    }\n\n    const sessions = webrtcStore.sessionsArray;\n    for (const session of sessions) {\n      const numberInCall = extractNumber(\n        phoneMasked(session.remote_identity.uri.user)\n      );\n\n      if (numberInCall == numbersUnmasked) {\n        webrtcStore.setSessionActive(session);\n        webrtcStore.setOpenDialpad(true);\n        return;\n      }\n    }\n\n    if (!userAgent) {\n      webrtcStore.userAgentActive.ua.call(numbersUnmasked, options);\n      keypadStore.setPhoneSelected({ name: '', number: '' });\n      return;\n    }\n\n    userAgent.ua.call(numbersUnmasked, options);\n    keypadStore.setPhoneSelected({ name: '', number: '' });\n  }\n\n  function newsubscribe(number: string, userAgent: UA) {\n    const subscriber = userAgent.subscribe(\n      number,\n      'dialog',\n      'text/json,text/plain',\n      {\n        expires: 3600,\n        contentType: 'text/json',\n      }\n    );\n\n    subscribes.set(number, subscriber);\n  }\n\n  function listenerSubscribes(subscriber: Subscriber) {\n    subscriber.on('notify', (isFinal, notify, body, contentType) => {\n      // with not empty body\n      console.log(\n        `subscriber>> receive ${isFinal ? 'final ' : ''}NOTIFY`,\n        notify,\n        body,\n        contentType\n      );\n    });\n\n    subscriber.subscribe();\n  }\n\n  return {\n    sessions,\n    hasSessions,\n    register,\n    unregister,\n    newCall,\n  };\n};\n"],"names":["Keypad","differenceInMilliseconds","dateLeft","dateRight","toDate","mediaConstraints","rtcOfferConstraints","rtcAnswerConstraints","options","useCall","call","webrtc","useWebrtcStore","mediaRecorder","ref","isRecording","hasSession","computed","isMuted","isOnHold","isEnded","displayName","localNumber","remoteNumber","dtmfTakeCall","localName","remoteName","direction","startTime","endTime","hold","unhold","mute","unmute","terminate","renegotiate","opt","answer","refer","number","toggleMute","toggleHold","onConfirmed","callback","onAccepted","onEnded","onFailed","ignore","getRemoteTrack","getLocalTrack","starstartTimeRecord","startRecording","mix","AudioTrackMixer","mixedTrack","mixedMediaStream","event","recordingStreamHandler","stopRecording","_a","_b","chunks","duration","blob","fixedBlob","ysFixWebmDuration","filename","file","saveAudio","toastSuccess","toggleRecording","sendDTMF","digit","dtmfOptions","DTMF_TRANSPORT","interval","Time","data","positionX","modifiedString","watchEffect","useUserAgent","sessions","t","useI18n","hasSessions","webrtcStore","mediaDeviceStore","useMediaDeviceStore","userStore","useUserStore","indexesStore","useIndexesStore","callStore","useCallsStore","messageStore","useMessageStore","route","useRoute","toastStore","useToastStore","keypadStore","useKeypadStore","getUserAgentConfiguration","username","password","JsSIP","uri","websocketProxyUrl","inCall","session","existsDuration","setCall","RouteName","conference","conferenceSession","newMessage","e","body","setUserAgentEvents","userAgent","subscribeStore","useSubscribeStore","index","dndNumberEnable","remoteAudio","ev","register","numberDetails","unregister","userAgentArray","ua","newCall","toastWarning","numbersUnmasked","extractNumber","phoneMasked","row"],"mappings":"yPAAY,IAAAA,GAAAA,IACVA,EAAA,SAAW,IACXA,EAAA,QAAU,IAFAA,IAAAA,GAAA,CAAA,CAAA,EC0BL,SAASC,GAAyBC,EAAUC,EAAW,CAC5D,OAAOC,EAAOF,CAAQ,EAAE,QAAO,EAAKE,EAAOD,CAAS,EAAE,SACxD,CC1BA,MAAME,GAAqC,CACzC,MAAO,GACP,MAAO,EACT,EAUMC,GAAuC,CAC3C,oBAAqB,GACrB,oBAAqB,EACvB,EAEMC,GAAwC,CAC5C,oBAAqB,GACrB,oBAAqB,EACvB,EAEaC,EAAyB,CACpC,iBAAAH,GACA,oBAAAC,GACA,qBAAAC,EACF,ECXO,SAASE,GAAQC,EAAkB,CACxCA,GAAA,MAAAA,EAAM,gBAAgB,IACtB,MAAMC,EAASC,IAETC,EAAgBC,EAA0B,IAAI,EAC9CC,EAAcD,EAAI,EAAK,EAEvBE,EAAaC,EAAS,IAAM,OAAO,QAAQP,CAAI,EAAE,OAAS,CAAC,EAE3DQ,EAAUJ,GAAIJ,GAAA,YAAAA,EAAM,UAAU,QAAS,EAAK,EAE5CS,EAAWL,GAAIJ,GAAA,YAAAA,EAAM,WAAW,QAAS,EAAK,EAE9CU,EAAUH,EAAS,IACnBD,EAAW,MACNN,GAAA,YAAAA,EAAM,UAER,IACR,EAEKW,EAAcJ,EAAS,IACvBD,EAAW,MACNN,GAAA,YAAAA,EAAM,eAAe,aAEvB,IACR,EAEKY,EAAcL,EAAS,IACvBD,EAAW,MACNN,GAAA,YAAAA,EAAM,eAAe,IAAI,KAE3B,IACR,EAEKa,EAAeN,EAAS,IAAM,CAClC,GAAID,EAAW,MAAO,CACdO,MAAAA,EAAeb,EAAK,gBAAgB,IAAI,KACxCc,EAAe,MACdD,OAAAA,EAAa,WAAWC,CAAY,EACvCD,EAAa,QAAQC,EAAc,EAAE,EACrCd,GAAA,YAAAA,EAAM,gBAAgB,IAAI,IAChC,CACO,OAAA,IAAA,CACR,EAEKe,EAAYR,EAAS,IACrBD,EAAW,MACNN,GAAA,YAAAA,EAAM,eAAe,aAEvB,IACR,EAEKgB,EAAaT,EAAS,IACtBD,EAAW,MACNN,GAAA,YAAAA,EAAM,gBAAgB,aAExB,IACR,EAEKiB,EAAYV,EAAS,IACrBD,EAAW,MACNN,GAAA,YAAAA,EAAM,UAER,IACR,EAEKkB,EAAYd,EAAsBJ,GAAA,YAAAA,EAAM,UAAU,EAElDmB,EAAUf,EAAsBJ,GAAA,YAAAA,EAAM,QAAQ,EAEpD,SAASoB,GAAO,CACdpB,GAAA,MAAAA,EAAM,OACNS,EAAS,MAAQ,EACnB,CAEA,SAASY,GAAS,CAChBrB,GAAA,MAAAA,EAAM,SACNS,EAAS,MAAQ,EACnB,CAEA,SAASa,GAAO,CACdtB,EAAK,KAAK,EACVQ,EAAQ,MAAQ,EAClB,CAEA,SAASe,GAAS,CAChBvB,EAAK,OAAO,EACZQ,EAAQ,MAAQ,EAClB,CAEA,SAASgB,GAAY,CACnBxB,GAAA,MAAAA,EAAM,WACR,CAEA,SAASyB,EAAYC,EAA0B,CAC7C1B,GAAA,MAAAA,EAAM,YAAY0B,EACpB,CAEA,SAASC,GAAS,CAChB3B,EAAK,OAAOF,CAAO,CACrB,CAES,SAAA8B,EAAMC,EAAgBH,EAAoB,CAC3C1B,GAAA,MAAAA,EAAA,MAAM6B,EAAQH,EACtB,CAEA,SAASI,GAAa,CACpB,GAAItB,EAAQ,MACV,OAAOe,EAAO,EAGXD,GACP,CAEA,SAASS,GAAa,CACpB,GAAItB,EAAS,MACX,OAAOY,EAAO,EAGXD,GACP,CAEA,SAASY,EAAYC,EAA6B,CAC1CjC,GAAA,MAAAA,EAAA,GAAG,YAAaiC,EACxB,CAEA,SAASC,EAAWD,EAAwB,CACpCjC,GAAA,MAAAA,EAAA,GAAG,WAAYiC,EACvB,CAEA,SAASE,EAAQF,EAAuB,CAChCjC,GAAA,MAAAA,EAAA,GAAG,QAASiC,EACpB,CAEA,SAASG,EAASH,EAAuB,CACjCjC,GAAA,MAAAA,EAAA,GAAG,SAAUiC,EACrB,CAEA,SAASI,GAAS,CAChBpC,EAAO,cAAcD,CAAI,CAC3B,CAEA,SAASsC,GAAiB,CACxB,OAAOtC,GAAA,YAAAA,EAAM,WAAW,eAAe,GAAG,KAC5C,CAEA,SAASuC,GAAgB,CACvB,OAAOvC,GAAA,YAAAA,EAAM,WAAW,aAAa,GAAG,KAC1C,CAEM,MAAAwC,EAAsBpC,EAAI,CAAC,EAEjC,SAASqC,GAAiB,CACxBpC,EAAY,MAAQ,GAEd,MAAAqC,EAAM,IAAIC,GACZD,EAAA,SAASJ,GAAgB,EACzBI,EAAA,SAASH,GAAmC,EAC1C,MAAAK,EAAaF,EAAI,gBACjBG,EAAmB,IAAI,YAAY,CAACD,CAAU,CAAC,EACvCzC,EAAA,MAAQ,IAAI,cAAc0C,EAAkB,CACxD,SAAU,aACV,mBAAoB,KAAA,CACrB,EACD1C,EAAc,MAAM,QACAqC,EAAA,MAAQ,KAAK,MAEnBrC,EAAA,MAAM,gBAAmB2C,GAAU,CAC/CC,EAAuBD,CAAK,CAAA,CAEhC,CAEA,SAASE,GAAgB,WACnBC,EAAA9C,EAAc,QAAd,YAAA8C,EAAqB,SAAU,aACjC5C,EAAY,MAAQ,IACpB6C,EAAA/C,EAAc,QAAd,MAAA+C,EAAqB,OAEzB,CAEA,eAAeH,EAAuBD,EAAkB,OACtD,MAAMK,EAAiB,CAAA,EAGnB,GAFGA,EAAA,KAAKL,EAAM,IAAI,IAElBG,EAAA9C,EAAc,QAAd,YAAA8C,EAAqB,SAAU,WAAY,CAC7C,MAAMG,EAAW,KAAK,IAAI,EAAIZ,EAAoB,MAC5Ca,EAAO,IAAI,KAAKF,EAAQ,CAAE,KAAML,EAAM,KAAM,EAE5CQ,GAAY,MAAMC,GAAkBF,EAAMD,CAAQ,EAClDI,GACJ5C,EAAY,MACZ,IACAC,EAAa,MACb,IACA,KAAK,IAAA,EACL,QAEI4C,GAAO,IAAI,KAAK,CAACH,EAAS,EAAGE,EAAQ,EAEvC,GAAA,CACF,MAAME,GAAUD,EAAI,EACpBE,GAAa,aAAa,EAC1BxD,EAAc,MAAQ,UACZ,CACVA,EAAc,MAAQ,IAAA,QACtB,CACAqC,EAAoB,MAAQ,CAC9B,CACF,CACF,CAEA,SAASoB,GAAkB,CACrBvD,EAAY,MACA2C,IAECP,GAEnB,CAEA,SAASoB,EAASC,EAAwB,CACxC,MAAMC,EAA2B,CAC/B,cAAeC,GAAe,eAAA,QAC9B,SAAU,GACV,aAAc,EAAA,EAEVhE,GAAA,MAAAA,EAAA,SAAS8D,EAAOC,EACxB,CAEA,GAAIzD,EAAW,MAAO,CAChB,IAAA2D,EAECjE,EAAA,GAAG,aAAc,IAAM,CACrBsB,GAAA,CACN,EAEKtB,GAAA,MAAAA,EAAA,GAAG,YAAa,IAAM,CAC1BkB,EAAU,MAAQlB,EAAK,WAChBuB,IAEP0C,EAAW,YAAY,IAAM,CACnBzD,EAAA,MAAQR,EAAK,QAAA,EAAU,MACtBS,EAAA,MAAQT,EAAK,SAAA,EAAW,KAAA,EAChCkE,GAAK,MAAM,CAAA,GAGVlE,GAAA,MAAAA,EAAA,GAAG,QAAS,IAAM,CACRgD,IACd,cAAciB,CAAQ,CAAA,GAGlBjE,GAAA,MAAAA,EAAA,GAAG,SAAU,IAAM,CACTgD,IACd,cAAciB,CAAQ,CAAA,GAGlBjE,GAAA,MAAAA,EAAA,GAAG,MAAQmE,GAAS,CACpB,GAAAA,EAAK,IAAI,OAAS,IAAM,CAC1B,MAAMC,EAAYD,EAAK,IAAI,QAAQ,yBAAyB,EAC5D,GAAIC,IAAc,GAAI,CACpB,MAAMC,EAAiBF,EAAK,IAAI,UAAU,EAAGC,CAAS,EACtDD,EAAK,IAAME,CACb,CACF,CAAA,GAGFC,GAAY,IAAM,CACR9D,EAAA,MAAQR,EAAK,QAAA,EAAU,MACtBS,EAAA,MAAQT,EAAK,SAAA,EAAW,KAAA,CAClC,CACH,CAEO,MAAA,CACL,KAAAA,EACA,WAAAM,EACA,QAAAE,EACA,SAAAC,EACA,QAAAC,EACA,YAAAL,EACA,YAAAM,EACA,YAAAC,EACA,aAAAC,EACA,UAAAE,EACA,WAAAC,EACA,UAAAC,EACA,UAAAC,EACA,QAAAC,EACA,UAAAK,EACA,YAAAC,EACA,OAAAE,EACA,MAAAC,EACA,WAAAE,EACA,WAAAC,EACA,YAAAC,EACA,WAAAE,EACA,QAAAC,EACA,SAAAC,EACA,OAAAC,EACA,gBAAAuB,EACA,SAAAC,EACA,OAAAtC,CAAA,CAEJ,CC9RO,MAAMgD,GAAe,IAAM,CAC1B,MAAAC,EAAWpE,EAA6B,CAAA,CAAE,EAE1C,CAAE,EAAAqE,GAAMC,KACRC,EAAcpE,EAAS,IAAM,OAAO,QAAQiE,EAAS,KAAK,EAAE,OAAS,CAAC,EACtEI,EAAc1E,IACd2E,EAAmBC,KACnBC,EAAYC,KACZC,EAAeC,KACfC,EAAYC,KACZC,EAAeC,KACfC,EAAQC,KACRC,EAAaC,KACbC,EAAcC,KAEX,SAAAC,EACPC,EACAC,EACApF,EACA,CACAqF,EAAM,MAAM,UAEJA,EAAA,MAAM,OAAO,SAAS,EAE9B,MAAMC,EAAM,OAAOH,CAAQ,IAAIf,EAAU,QAAQ,IAAI,GAC/CmB,EAAoBnB,EAAU,QAAQ,UAErC,MAAA,CACL,QAAS,CAFI,IAAIiB,EAAM,mBAAmBE,CAAiB,CAE3C,EAChB,IAAAD,EACA,SAAAF,EACA,MAAOhB,EAAU,QAAQ,KACzB,YAAakB,EACb,aAActF,EACd,kBAAmB,IACnB,SAAU,GACV,eAAgB,GAChB,+BAAgC,GAChC,8BAA+B,SAC/B,WAAY,cAAA,CAEhB,CAEA,SAASwF,EAAOC,EAAqB,CAC7B,KAAA,CAAE,UAAAlF,EAAW,QAAAC,EAAS,YAAAP,EAAa,aAAAC,EAAc,UAAAI,CAAU,EAC/DlB,GAAQqG,CAAO,EACXC,EAAiB,CAAC,CAACnF,EAAU,OAAS,CAAC,CAACC,EAAQ,MAE/C,MAAA,CACL,UAAAD,EACA,QAAAC,EACA,YAAAP,EACA,aAAAC,EACA,UAAAI,EACA,eAAAoF,CAAA,CAEJ,CAEA,SAASC,EAAQF,EAAqB,CAC9B,KAAA,CACJ,UAAAlF,EACA,QAAAC,EACA,YAAAP,EACA,aAAAC,EACA,UAAAI,EACA,eAAAoF,CAAA,EACEF,EAAOC,CAAO,EACZhD,EAAWiD,EACb9G,GAAyB4B,EAAQ,MAAeD,EAAU,KAAa,EACvE,KACJiE,EAAU,QAAQ,CAChB,UAAWlE,EAAU,MACrB,OAAQoF,EACJ,WACAD,EAAQ,YAAc,WACtB,YACA,SACJ,OAAQA,EAAQ,GAChB,KAAMlF,EAAU,OAAS,IAAI,KAC7B,SAAAkC,EACA,YAAaxC,EAAY,MACzB,aAAcC,EAAa,KAAA,CAC5B,EACGuF,EAAQ,YAAc,YACXf,EAAA,kBACXe,EAAQ,GACRC,EAAiB,WAAa,SAC9BjD,CAAA,CAGN,CAEA,SAASjB,EAAQiE,EAAqB,OACpC,KAAM,CAAE,eAAAC,EAAgB,UAAApF,CAAU,EAAIkF,EAAOC,CAAO,EACpDT,EAAY,eAAe,EAAK,EAChCA,EAAY,iBAAiB,CAAE,KAAM,GAAI,OAAQ,GAAI,GAElDJ,EAAM,OAASgB,GAAU,UAAYpB,EAAU,OAAS,SACzD,CAACkB,GACDpF,EAAU,QAAU,YAEpBkE,EAAU,oBAAoB,EAEhCmB,EAAQ9B,EAAS,MAAM4B,EAAQ,EAAE,CAAe,EACzC,OAAA5B,EAAS,MAAM4B,EAAQ,EAAE,EAChCxB,EAAY,cAAcwB,CAAO,EAG/BxB,EAAY,kBACZ3B,EAAA2B,EAAY,SAAS,OAArB,YAAA3B,EAA2B,MAAOmD,EAAQ,IAE9BxB,EAAA,YAAY,CAAA,CAAE,EAIxBwB,EAAQ,gBAAgB,IAAI,KAAK,WADd,SACuC,IAC5DT,EAAY,uBAAuB,EACnCA,EAAY,kBAAkB,EAAE,EAChCA,EAAY,gBAAgB,CAC1B,aAAc,GACd,KAAM,EAAA,CACP,GAIDS,EAAQ,gBAAgB,IAAI,KAAK,SAC/BT,EAAY,aAAa,YAAA,GAG3BA,EAAY,gBAAgB,CAC1B,aAAc,GACd,KAAM,EAAA,CACP,CAEL,CAEA,SAASa,GAAa,CAKpB,GAFE5B,EAAY,2BAFS,SAEgC,EAEhC,CACrBe,EAAY,wBAAwB,EAAK,EACzC,MACF,CAEuBf,EAAY,cAAc,OAAQwB,GACvDT,EAAY,WAAW,SAAS,KAAMc,GACpCL,EAAQ,gBAAgB,IAAI,KAAK,SAASK,EAAkB,MAAM,CACpE,CAAA,EAGiB,SAAW,GAAKd,EAAY,WAAW,aACxDA,EAAY,wBAAwB,EAAK,EACzCf,EAAY,gBAAgB,GAAG,KAAKe,EAAY,WAAW,KAAM7F,CAAO,EAE5E,CAEA,SAAS4G,EAAWC,EAAgD,CAClE,GAAIA,EAAE,aAAe,QAAS,OAE9B,MAAMC,EAAO,KAAK,MAAMD,EAAE,QAAQ,IAAI,EAElCC,EAAK,OAAS,cAChBjB,EAAY,gBAAgB,CAC1B,KAAMiB,EAAK,QAAQ,KACnB,aAAcA,EAAK,QAAQ,YAAA,CAC5B,CAEL,CAES,SAAAC,EAAmBC,EAAqBjF,EAAgB,CAC/D,MAAMkF,EAAiBC,IAEvBF,EAAU,gBAAgB,EAAE,EAClBA,EAAA,GAAG,qBAAuBhE,GAAU,CACtC,MAAAmE,EAAQlC,EAAU,2BAA2BlD,CAAM,EACzDkD,EAAU,UAAUkC,CAAK,EAAE,mBAAqBnE,EAAM,MACtD2C,EAAW,SAAS,CAClB,GAAI,OAAO,OAAO,WAAW,EAC7B,MAAO5D,EACP,QAAS,QACT,QAAS4C,EAAE,4BAA4B,CAAA,CACxC,CAAA,CACF,EACSqC,EAAA,GAAG,aAAc,SAAY,CACrCC,EAAe,aAAaD,CAAS,EAE/B,MAAAG,EAAQlC,EAAU,2BAA2BlD,CAAM,EAC/CkD,EAAA,UAAUkC,CAAK,EAAE,mBAAqB,IAG5CrC,EAAY,eAAe,SAAW,GADxB,KAEhBA,EAAY,mBAAmB,CAC7B,OAAA/C,EACA,GAAIiF,CAAA,CACL,EAEHlC,EAAY,kBAAkB,CAC5B,OAAA/C,EACA,GAAIiF,CAAA,CACL,GAGC7B,EAAa,kBAAkBpD,CAAM,IAAM,QAC3C,CAACoD,EAAa,kBAAkBpD,CAAM,KAEtC4D,EAAW,SAAS,CAClB,GAAI,OAAO,OAAO,WAAW,EAC7B,MAAO5D,EACP,QAAS,QACT,QAAS4C,EAAE,4BAA4B,CAAA,CACxC,EACYQ,EAAA,wBAAwBpD,EAAQ,EAAI,EACnD,CAED,EAESiF,EAAA,GAAG,eAAiBhE,GAAU,CACtC,MAAMjB,EAASiB,EAAM,SAAWA,EAAM,SAAS,KAAK,IAAI,KAAO,KAC/D,GAAIjB,EACF,MAAA+C,EAAY,gBAAgB/C,CAAM,EAE9BoD,EAAa,kBAAkBpD,CAAM,IAAM,SAC7C4D,EAAW,SAAS,CAClB,GAAI,OAAO,OAAO,WAAW,EAC7B,MAAO5D,EACP,QAAS,QACT,QAAS4C,EAAE,8BAA8B,CAAA,CAC1C,EACYQ,EAAA,wBAAwBpD,EAAQ,EAAK,GAE9C,CAAE,QAAS,+BAA+BA,CAAM,IAAK,MAAAiB,EAC7D,CACD,EAESgE,EAAA,GACR,aACCH,GAAmD,CAClDD,EAAWC,CAAC,CACd,CAAA,EAGQG,EAAA,GACR,gBACA,MAAOH,GAAyD,CAG1D,GAFJhB,EAAY,cAAc,EAAK,EAE3BgB,EAAE,QAAQ,YAAc,WAAY,CACtC,MAAM9F,EAAe8F,EAAE,QAAQ,gBAAgB,IAAI,KAEtCtB,EAAA,eACXsB,EAAE,QAAQ,GACVA,EAAE,QAAQ,eAAe,IAAI,KAC7BA,EAAE,QAAQ,gBAAgB,IAAI,IAAA,EAI9B9F,EAAa,WAAW,SAAS,GACjC,CAAC8E,EAAY,WAAW,MAExBA,EAAY,gBAAgB,CAC1B,KAAM9E,EACN,aAAc,EAAA,CACf,CAEL,CAEM,MAAAqG,EAAkBnC,EAAU,UAAU,KACzClD,GACCA,EAAO,kBAAoB8E,EAAE,QAAQ,eAAe,IAAI,MACxD9E,EAAO,MAAQ,QACfA,EAAO,GAAA,EAIX,IACGkD,EAAU,eAAiB,OAASmC,IACrCP,EAAE,QAAQ,YAAc,WACxB,CACAA,EAAE,QAAQ,YACV,MACF,CAEAnC,EAAS,MAAMmC,EAAE,QAAQ,EAAE,EAAIA,EAAE,QAC5B/B,EAAY,iBACHA,EAAA,iBAAiB+B,EAAE,OAAO,EAC1B/B,EAAA,iBAAiB+B,EAAE,OAAO,GAGpCnC,EAAS,MAAMmC,EAAE,QAAQ,EAAE,EAAE,YAAc,YAC7CnC,EAAS,MAAMmC,EAAE,QAAQ,EAAE,EAAE,WAAW,iBACtC,QACA,MAAO7D,GAAU,CACT,MAAAqE,EAAc,IAAI,MAGpBtC,EAAiB,gBACPsC,EAAA,UAAUtC,EAAiB,eAAe,QAAQ,EAEpDsC,EAAA,UAAYrE,EAAM,QAAQ,CAAC,EACvCqE,EAAY,KAAK,EACjBvC,EAAY,qBAAqB+B,EAAE,QAAQ,GAAI7D,EAAM,QAAQ,CAAC,CAAC,CACjE,CAAA,EAIK0B,EAAA,MAAMmC,EAAE,QAAQ,EAAE,EAAE,GAAG,iBAAmBxC,GAAS,CAC1DA,EAAK,eAAe,iBAAiB,QAAS,MAAOrB,GAAU,CACvD,MAAAqE,EAAc,IAAI,MAGpBtC,EAAiB,gBACPsC,EAAA,UACTtC,EAAiB,eAAmC,QAAA,EAG7CsC,EAAA,UAAYrE,EAAM,QAAQ,CAAC,EACvCqE,EAAY,KAAK,EACjBvC,EAAY,qBAAqB+B,EAAE,QAAQ,GAAI7D,EAAM,QAAQ,CAAC,CAAC,CAAA,CAChE,CAAA,CACF,EAEQ0B,EAAA,MAAMmC,EAAE,QAAQ,EAAE,EAAE,GAAG,SAAWS,GAAO,CACxC,QAAA,IAAI,SAAUA,CAAE,CAAA,CACzB,EAEQ5C,EAAA,MAAMmC,EAAE,QAAQ,EAAE,EAAE,GAAG,QAAUS,GAAO,CACvC,QAAA,IAAI,aAAcA,CAAE,EAE5BjF,EAAQwE,EAAE,OAAO,EACNH,GAAA,CACZ,EAEQhC,EAAA,MAAMmC,EAAE,QAAQ,EAAE,EAAE,GAAG,SAAWS,GAAO,CACxC,QAAA,IAAI,gBAAiBA,CAAE,EAC/BjF,EAAQwE,EAAE,OAAO,CAAA,CAClB,CACH,CAAA,EAGQG,EAAA,GAAG,eAAiBhE,GAAU,CAChC,KAAA,CAAE,QAAS,iCAAkC,MAAAA,EAAM,CAC1D,CACH,CAEe,eAAAuE,EACbvB,EACAC,EACApF,EACA,CACM,MAAA2G,EAAgBvC,EAAU,UAAU,KACvClD,GAAWA,EAAO,kBAAoBiE,CAAA,EAIzC,GAAI,GAACwB,GAAiB,CAACA,EAAc,SAIjC,CAAC1C,EAAY,qBAAqBkB,CAAQ,EAAG,CACzC,MAAAgB,EAAY,IAAId,EAAM,GAC1BH,EAA0BC,EAAUC,EAAUpF,CAAW,CAAA,EAE3D,OAAAmG,EAAU,MAAM,EAChBD,EAAmBC,EAAWhB,CAAQ,EAC/BgB,CACT,CACF,CAEA,eAAeS,EAAW1F,EAAgB,CACxC,MAAM2F,EAAiB,CAAC,GAAG5C,EAAY,cAAc,EAC/CmC,EAAiBC,IAEjBC,EAAQO,EAAe,UAAWC,GAAOA,EAAG,SAAW5F,CAAM,EACnE,GAAIoF,IAAU,GAAI,CACV,MAAAH,EAAYU,EAAeP,CAAK,EAQlC,GANAH,EAAU,GAAG,eACfA,EAAU,GAAG,OAGflC,EAAY,gBAAgB/C,CAAM,EAE9B+C,EAAY,eAAe,SAAW,EAAG,CAC3CmC,EAAe,YAAY,EAC3B,MACF,CAEIE,IAAU,GACZF,EAAe,aAAanC,EAAY,eAAeqC,CAAK,EAAE,EAAE,CAEpE,CACF,CAES,SAAAS,EACP7F,EACAiF,EAA0C,KAC1C,CACA,GAAI,CAACjF,EACI,OAAA8F,GAAalD,EAAE,gCAAgC,CAAC,EAGzD,MAAMmD,EACJ/F,EAAO,WAAWvC,EAAO,QAAQ,GAAKuC,EAAO,WAAWvC,EAAO,OAAO,EAClEuC,EACAgG,EAAcC,EAAYjG,CAAM,CAAC,EAEnC,GAAAkD,EAAU,UAAU,OAAS,GACpB,UAAAgD,KAAOhD,EAAU,UAC1B,GAAIgD,EAAI,kBAAoBH,EAAiB,OAIjD,MAAMpD,EAAWI,EAAY,cAC7B,UAAWwB,KAAW5B,EAKpB,GAJqBqD,EACnBC,EAAY1B,EAAQ,gBAAgB,IAAI,IAAI,CAAA,GAG1BwB,EAAiB,CACnChD,EAAY,iBAAiBwB,CAAO,EACpCxB,EAAY,eAAe,EAAI,EAC/B,MACF,CAGF,GAAI,CAACkC,EAAW,CACdlC,EAAY,gBAAgB,GAAG,KAAKgD,EAAiB9H,CAAO,EAC5D6F,EAAY,iBAAiB,CAAE,KAAM,GAAI,OAAQ,GAAI,EACrD,MACF,CAEUmB,EAAA,GAAG,KAAKc,EAAiB9H,CAAO,EAC1C6F,EAAY,iBAAiB,CAAE,KAAM,GAAI,OAAQ,GAAI,CACvD,CA8BO,MAAA,CACL,SAAAnB,EACA,YAAAG,EACA,SAAA0C,EACA,WAAAE,EACA,QAAAG,CAAA,CAEJ","x_google_ignoreList":[1]}