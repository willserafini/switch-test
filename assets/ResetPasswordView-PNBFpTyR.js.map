{"version":3,"file":"ResetPasswordView-PNBFpTyR.js","sources":["../../src/composables/use-api/reset-password.ts","../../src/views/ResetPasswordView.vue"],"sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { EndpointApi } from '@/enums';\nimport type { ApiDataException } from '@/types';\nimport { getCookieByName } from '@/utils';\n\ninterface ResetPassword {\n  rememberToken: string;\n  password: string;\n  passwordConfirmation: string;\n}\n\nexport async function useResetPassword(data: ResetPassword) {\n  try {\n    await axios.get(EndpointApi.CSRF);\n    const response = await axios.post(\n      EndpointApi.ResetPassword,\n      {\n        remember_token: data.rememberToken,\n        password: data.password,\n        password_confirmation: data.passwordConfirmation,\n      },\n      {\n        headers: {\n          'X-XSRF-TOKEN': getCookieByName('XSRF-TOKEN'),\n        },\n      }\n    );\n    return response.data;\n  } catch (err) {\n    throw err as AxiosError<ApiDataException>;\n  }\n}\n","<template>\n  <div class=\"form auth-boxed\">\n    <div class=\"form-container outer\">\n      <div class=\"form-form\">\n        <div class=\"form-form-wrap\">\n          <div class=\"form-container\">\n            <div class=\"form-content\">\n              <h1 class=\"\">\n                <img\n                  v-if=\"systemLogo\"\n                  src=\"@/assets/images/logo_us.svg\"\n                  width=\"150\"\n                  alt=\"\"\n                />\n                <img\n                  v-else\n                  src=\"@/assets/images/logo_au.svg\"\n                  width=\"150\"\n                  alt=\"\"\n                />\n              </h1>\n              <p class=\"\">{{ t('Create password') }}</p>\n              <form\n                ref=\"loginFormRef\"\n                class=\"text-start needs-validation\"\n                novalidate\n                @submit.prevent=\"createPassword\"\n              >\n                <div class=\"form\">\n                  <div id=\"username-field\" class=\"field-wrapper input\">\n                    <label for=\"username-field\">{{ t('PASSWORD') }}</label>\n                    <BaseIcon name=\"lock\" class=\"mt-1\" />\n                    <input\n                      v-model=\"form.password\"\n                      :type=\"pwdType\"\n                      class=\"form-control\"\n                      :class=\"[errors?.password ? 'is-invalid' : '']\"\n                      placeholder=\"Password\"\n                      :disabled=\"isLoading\"\n                    />\n                    <div class=\"invalid-feedback\" v-html=\"errors?.password\" />\n                    <span @click=\"setPwdType\">\n                      <BaseIcon\n                        name=\"eye\"\n                        custom-class=\"feather feather-eye\"\n                        class=\"mt-1\"\n                      />\n                    </span>\n                  </div>\n                  <div id=\"password-field\" class=\"field-wrapper input mb-2\">\n                    <label for=\"password-field\">{{\n                      t('CONFIRM PASSWORD')\n                    }}</label>\n                    <BaseIcon name=\"lock\" class=\"mt-1\" />\n                    <input\n                      v-model=\"form.passwordConfirmation\"\n                      :type=\"pwdType\"\n                      class=\"form-control\"\n                      :class=\"[\n                        errors?.passwordConfirmation ? 'is-invalid' : '',\n                      ]\"\n                      placeholder=\"Confirm Password\"\n                      :disabled=\"isLoading\"\n                    />\n                    <div\n                      class=\"invalid-feedback\"\n                      v-html=\"errors?.passwordConfirmation\"\n                    />\n                    <span @click=\"setPwdType\">\n                      <BaseIcon\n                        name=\"eye\"\n                        custom-class=\"feather feather-eye\"\n                        class=\"mt-1\"\n                      />\n                    </span>\n                  </div>\n                  <div class=\"d-sm-flex justify-content-between\">\n                    <div class=\"field-wrapper\">\n                      <button\n                        type=\"submit\"\n                        class=\"primary-btn w-100 py-3\"\n                        :disabled=\"isLoading\"\n                      >\n                        <BaseIcon\n                          v-if=\"isLoading\"\n                          name=\"fa-solid fa-spinner\"\n                          class=\"spin\"\n                          library=\"fontawesome\"\n                          font-size=\"1rem\"\n                        ></BaseIcon>\n                        {{ t('Create') }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport { useInputType, useResetPassword, usePageTitle } from '@/composables';\nimport {ref, watch, onBeforeMount, computed} from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useRoute, useRouter } from 'vue-router';\nimport { RouteName } from '@/enums';\nimport type { AxiosError } from 'axios';\nimport type { ApiDataException } from '@/types';\nimport { toastError, toastSuccess } from '@/utils';\n\ninterface Errors {\n  password?: string | string[];\n  passwordConfirmation?: string | string[];\n}\n\ntype FormErrors = Errors | [];\n\nconst { t } = useI18n();\nusePageTitle(t('Create Password'));\nconst router = useRouter();\nconst route = useRoute();\n\nconst loginFormRef = ref<HTMLFormElement>();\n\nconst { pwdType, setPwdType } = useInputType();\n\nconst form = ref({\n  password: '',\n  passwordConfirmation: '',\n  rememberToken: '',\n});\n\nconst errors = ref({\n  password: '',\n  passwordConfirmation: '',\n});\n\nfunction resetErrors() {\n  errors.value = {\n    password: '',\n    passwordConfirmation: '',\n  };\n}\n\nconst isLoading = ref(false);\n\nwatch(\n  () => form.value,\n  () => {\n    resetErrors();\n  },\n  { deep: true }\n);\n\nasync function createPassword() {\n  resetErrors();\n\n  if (!form.value.password || !form.value.passwordConfirmation) {\n    if (!form.value.password) {\n      errors.value.password = t('Password are required');\n    }\n\n    if (!form.value.passwordConfirmation) {\n      errors.value.passwordConfirmation = t('Confirm password are required');\n    }\n    return;\n  }\n\n  if (form.value.password !== form.value.passwordConfirmation) {\n    return (errors.value.passwordConfirmation = t('Password does not match'));\n  }\n  const letterUpperCase = /(?=.*?[A-Z])/;\n  const letterLowerCase = /(?=.*?[a-z])/;\n  const letterDigitCase = /(?=.*?[0-9])/;\n\n  if (!letterLowerCase.test(form.value.passwordConfirmation)) {\n    errors.value.passwordConfirmation =\n      t('Password requires a lowercase character') + '<br>';\n  }\n\n  if (!letterUpperCase.test(form.value.passwordConfirmation)) {\n    errors.value.passwordConfirmation +=\n      t('Password requires a uppercase character') + '<br>';\n  }\n\n  if (!letterDigitCase.test(form.value.passwordConfirmation)) {\n    errors.value.passwordConfirmation +=\n      t('Password requires one digit') + '<br>';\n  }\n\n  if (form.value.password.length < 8) {\n    errors.value.passwordConfirmation += t(\n      'Password requires at least 8 digits'\n    );\n  }\n\n  if (errors.value.passwordConfirmation) return;\n\n  isLoading.value = true;\n  await useResetPassword(form.value)\n    .then(async () => {\n      isLoading.value = false;\n      toastSuccess(t('Changed password'));\n      router.push({ name: RouteName.Login });\n    })\n    .catch((error: AxiosError<ApiDataException>) => {\n      isLoading.value = false;\n\n      const response = error.response?.data;\n      toastError(response?.message as string);\n\n      if (error.response?.status === 422) {\n        const formErrors = response?.form_errors as FormErrors;\n        if (Object.keys(formErrors).length > 0) {\n          for (const e of Object.keys(formErrors)) {\n            const key = e as keyof Errors;\n            const messages = (formErrors as Errors)[key] as string[] | string;\n\n            if (typeof messages !== 'string') {\n              for (const message of messages) {\n                errors.value[key] += message;\n                errors.value[key] += '<br>';\n              }\n            } else {\n              errors.value[key] = messages;\n            }\n          }\n        }\n      }\n    });\n}\n\nonBeforeMount(() => {\n  const rememberToken = route.query.remember_token;\n\n  if (rememberToken) {\n    return (form.value.rememberToken = rememberToken as string);\n  }\n\n  router.push({ name: RouteName.Login });\n});\n\nconst systemLogo = computed(() => import.meta.env.VITE_COUNTRY === 'US');\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/sass/authentication/auth-boxed.scss';\n</style>\n"],"names":["useResetPassword","data","axios","EndpointApi","getCookieByName","err","t","useI18n","usePageTitle","router","useRouter","route","useRoute","loginFormRef","ref","pwdType","setPwdType","useInputType","form","errors","resetErrors","isLoading","watch","createPassword","letterUpperCase","letterLowerCase","letterDigitCase","toastSuccess","RouteName","error","response","_a","toastError","_b","formErrors","e","key","messages","message","onBeforeMount","rememberToken","systemLogo","computed"],"mappings":"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"}