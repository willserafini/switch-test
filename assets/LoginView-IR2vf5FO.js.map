{"version":3,"file":"LoginView-IR2vf5FO.js","sources":["../../src/composables/use-api/forgot-password.ts","../../src/views/LoginView.vue"],"sourcesContent":["import axios, { AxiosError } from 'axios';\nimport { EndpointApi } from '@/enums';\nimport type { ApiDataException } from '@/types';\nimport { getCookieByName } from '@/utils';\n\ninterface ForgotPassword {\n  email: string;\n}\n\nexport async function useForgotPassword(data: ForgotPassword) {\n  try {\n    await axios.get(EndpointApi.CSRF);\n    const response = await axios.post(EndpointApi.ForgotPassword, data, {\n      headers: {\n        'X-XSRF-TOKEN': getCookieByName('XSRF-TOKEN'),\n      },\n    });\n    return response.data;\n  } catch (err) {\n    throw err as AxiosError<ApiDataException>;\n  }\n}\n","<template>\n  <div class=\"form auth-boxed\">\n    <div class=\"form-container outer\">\n      <div class=\"form-form\">\n        <div class=\"form-form-wrap\">\n          <div class=\"form-container\">\n            <div class=\"form-content\">\n              <h1 class=\"\">\n                <img\n                  v-if=\"systemLogo\"\n                  src=\"@/assets/images/logo_us.svg\"\n                  width=\"150\"\n                  alt=\"\"\n                />\n                <img\n                  v-else\n                  src=\"@/assets/images/logo_au.svg\"\n                  width=\"150\"\n                  alt=\"\"\n                />\n              </h1>\n              <GlobalText\n                as=\"p\"\n                :size=\"13\"\n                :weight=\"600\"\n                color=\"text-secondary\"\n                >{{ t('Sign in to your account') }}</GlobalText\n              >\n              <form\n                ref=\"loginFormRef\"\n                class=\"text-start needs-validation\"\n                novalidate\n                data-testid=\"form-login\"\n                @submit.prevent=\"login\"\n              >\n                <div class=\"form\">\n                  <div id=\"username-field\" class=\"field-wrapper input\">\n                    <label\n                      for=\"username-field\"\n                      :style=\"{ color: Color.TextPrimary }\"\n                      >{{ t('EMAIL') }}</label\n                    >\n                    <BaseIcon name=\"user\" :color=\"Color.LineIcon\" />\n                    <input\n                      v-model=\"form.email\"\n                      type=\"email\"\n                      placeholder=\"example@example.com\"\n                      :disabled=\"isLoading\"\n                    />\n                    <div class=\"invalid-feedback\" v-html=\"errors?.email\" />\n                  </div>\n                  <div id=\"password-field\" class=\"field-wrapper input mb-2\">\n                    <div class=\"d-flex justify-content-between\">\n                      <label\n                        for=\"password-field\"\n                        :style=\"{ color: Color.TextPrimary }\"\n                        >{{ t('PASSWORD') }}</label\n                      >\n                      <a\n                        class=\"forgot-pass-link\"\n                        :style=\"{\n                          color: Color.TextSecondary,\n                          cursor: 'pointer',\n                        }\"\n                        @click=\"openModalForgotPassword\"\n                        >{{ t('Forgot Password?') }}</a\n                      >\n                    </div>\n                    <BaseIcon name=\"lock\" :color=\"Color.LineIcon\" />\n                    <input\n                      v-model=\"form.password\"\n                      data-testid=\"password\"\n                      :type=\"pwdType\"\n                      class=\"form-control\"\n                      :class=\"[errors?.password ? 'is-invalid' : '']\"\n                      placeholder=\"Password\"\n                      :disabled=\"isLoading\"\n                    />\n                    <div class=\"invalid-feedback\" v-html=\"errors?.password\" />\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      :stroke=\"Color.LineIcon\"\n                      stroke-width=\"2\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      class=\"feather feather-eye\"\n                      @click=\"setPwdType\"\n                    >\n                      <path\n                        d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"\n                      ></path>\n                      <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                    </svg>\n                  </div>\n                  <div class=\"d-sm-flex justify-content-between\">\n                    <div class=\"field-wrapper\">\n                      <button\n                        type=\"submit\"\n                        class=\"primary-btn w-100 py-3\"\n                        :disabled=\"isLoading\"\n                      >\n                        <BaseIcon\n                          v-if=\"isLoading\"\n                          name=\"fa-solid fa-spinner\"\n                          class=\"spin\"\n                          library=\"fontawesome\"\n                          font-size=\"1rem\"\n                        ></BaseIcon>\n                        {{ t('Log In') }}\n                      </button>\n                    </div>\n                  </div>\n                  <p class=\"signup-link\">\n                    {{ t('Dont have an account?') }}\n                    <a :href=\"signupLink\" target=\"_blank\">{{\n                      t('Create one')\n                    }}</a>\n                  </p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <BaseModal v-model=\"modalForgotPassword\" scrollable persist size=\"sm\">\n    <template #header\n      ><span :style=\"{ color: Color.TextPrimary }\">\n        {{ t('Forgot your password?') }}\n      </span>\n    </template>\n    <template #body>\n      <section class=\"m-4\">\n        <span class=\"font-size-14\" :style=\"{ color: Color.TextPrimary }\">\n          {{\n            t(\n              `Please enter your account email and we'll email you a link to reset your password.`\n            )\n          }}\n          <form class=\"row g-3 needs-validation mt-2\" novalidate>\n            <div class=\"col-12\">\n              <GlobalInput\n                v-model=\"emailForgotPassword\"\n                type=\"text\"\n                :error-text=\"errorForgotPassword\"\n              />\n              <div class=\"invalid-feedback\">{{ errorForgotPassword }}</div>\n            </div>\n          </form>\n        </span>\n      </section>\n    </template>\n    <template #footer>\n      <div class=\"d-flex gap-3\">\n        <button\n          class=\"secondary-btn text-uppercase\"\n          :disabled=\"loadingForgotPassword\"\n          @click=\"modalForgotPassword = false\"\n        >\n          {{ t('Cancel') }}\n        </button>\n        <button\n          class=\"primary-btn text-uppercase\"\n          :disabled=\"loadingForgotPassword\"\n          @click=\"forgotPassword\"\n        >\n          <BaseIcon\n            v-if=\"loadingForgotPassword\"\n            name=\"fa-solid fa-spinner\"\n            class=\"spin\"\n            library=\"fontawesome\"\n            font-size=\"1rem\"\n          ></BaseIcon>\n          {{ t('Send') }}\n        </button>\n      </div>\n    </template>\n  </BaseModal>\n  <BaseModal v-model=\"modalEmailSent\" scrollable persist size=\"sm\">\n    <template #header\n      ><span :style=\"{ color: Color.TextPrimary }\">\n        {{ t('Email sent.') }}\n      </span>\n    </template>\n    <template #body>\n      <section class=\"m-4\">\n        <span class=\"font-size-14\" :style=\"{ color: Color.TextPrimary }\">\n          {{ t(`An email is on its way to you to reset your password.`) }}\n        </span>\n      </section>\n    </template>\n    <template #footer>\n      <div class=\"d-flex\">\n        <button\n          class=\"primary-btn text-uppercase\"\n          @click=\"modalEmailSent = false\"\n        >\n          {{ t('Ok') }}\n        </button>\n      </div>\n    </template>\n  </BaseModal>\n</template>\n\n<script setup lang=\"ts\">\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport {\n  useForgotPassword,\n  useInputType,\n  useLogin,\n  usePageTitle,\n} from '@/composables';\nimport { Color, RouteName } from '@/enums';\nimport { computed, ref, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nimport type { ApiDataException } from '@/types';\nimport type { AxiosError } from 'axios';\nimport { toastError } from '@/utils';\nimport { useI18n } from 'vue-i18n';\nimport BaseModal from '@/components/BaseModal.vue';\nimport GlobalInput from '@/components/Global/GlobalInput.vue';\nimport { GlobalText } from '@/components/Global/Text';\n\ninterface Errors {\n  email?: string | string[];\n  password?: string | string[];\n}\n\ntype FormErrors = Errors | [];\n\nconst loginFormRef = ref<HTMLFormElement>();\nconst router = useRouter();\nconst { t } = useI18n();\nconst signupLink = import.meta.env.VITE_SIGNUP_LINK;\nconst modalForgotPassword = ref(false);\nconst emailForgotPassword = ref('');\nconst loadingForgotPassword = ref(false);\nconst errorForgotPassword = ref('');\nconst modalEmailSent = ref(false);\n\nusePageTitle(t('Login'));\nconst { pwdType, setPwdType } = useInputType();\n\nconst form = ref({\n  email: '',\n  password: '',\n});\n\nconst errors = ref({\n  email: '',\n  password: '',\n});\n\nconst isLoading = ref(false);\n\nwatch(\n  () => form.value,\n  () => {\n    errors.value = {\n      email: '',\n      password: '',\n    };\n  },\n  { deep: true }\n);\n\nasync function login() {\n  if (!form.value.email || !form.value.password) {\n    if (!form.value.email) {\n      errors.value.email = 'Email are required';\n    }\n\n    if (!form.value.password) {\n      errors.value.password = 'Password are required';\n    }\n    return;\n  }\n\n  isLoading.value = true;\n  await useLogin(form.value)\n    .then(async () => {\n      router.push({ name: RouteName.Home });\n      isLoading.value = false;\n    })\n    .catch((error: AxiosError<ApiDataException>) => {\n      isLoading.value = false;\n\n      const response = error.response?.data;\n      toastError(response?.message as string);\n\n      if (error.response?.status === 422) {\n        const formErrors = response?.form_errors as FormErrors;\n        if (Object.keys(formErrors).length > 0) {\n          for (const e of Object.keys(formErrors)) {\n            const key = e as keyof Errors;\n            const messages = (formErrors as Errors)[key] as string[] | string;\n\n            if (typeof messages !== 'string') {\n              for (const message of messages) {\n                errors.value[key] += message;\n                errors.value[key] += '<br>';\n              }\n            } else {\n              errors.value[key] = messages;\n            }\n          }\n        }\n      }\n    });\n}\n\nasync function forgotPassword() {\n  loadingForgotPassword.value = true;\n  try {\n    await useForgotPassword({ email: emailForgotPassword.value });\n    modalForgotPassword.value = false;\n    modalEmailSent.value = true;\n    emailForgotPassword.value = '';\n  } catch (error) {\n    const response = (error as AxiosError<ApiDataException>).response?.data;\n    errorForgotPassword.value = response?.form_errors.email as string;\n  } finally {\n    loadingForgotPassword.value = false;\n  }\n}\n\nconst systemLogo = computed(() => import.meta.env.VITE_COUNTRY === 'US');\n\nwatch(emailForgotPassword, (value) => {\n  if (value) errorForgotPassword.value = '';\n});\n\nfunction openModalForgotPassword() {\n  errorForgotPassword.value = '';\n  modalForgotPassword.value = true;\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/sass/authentication/auth-boxed.scss';\n\n.field-wrapper input {\n  color: var(--input-text) !important;\n  border: 1px solid var(--input-border);\n  transition: 0.2s;\n}\n\n.field-wrapper input:focus {\n  box-shadow: none;\n  border: 1px solid var(--input-border-focus);\n}\n\n.field-wrapper input:hover:not(:focus) {\n  border: 1px solid var(--input-border-hover);\n}\n\n.field-wrapper input::placeholder {\n  color: var(--input-text-placeholder) !important;\n}\n</style>\n"],"names":["useForgotPassword","data","axios","EndpointApi","getCookieByName","err","loginFormRef","ref","router","useRouter","t","useI18n","signupLink","modalForgotPassword","emailForgotPassword","loadingForgotPassword","errorForgotPassword","modalEmailSent","usePageTitle","pwdType","setPwdType","useInputType","form","errors","isLoading","watch","login","useLogin","RouteName","error","response","_a","toastError","_b","formErrors","e","key","messages","message","forgotPassword","systemLogo","computed","value","openModalForgotPassword"],"mappings":"2uBASA,eAAsBA,GAAkBC,EAAsB,CACxD,GAAA,CACI,aAAAC,EAAM,IAAIC,EAAY,IAAI,GACf,MAAMD,EAAM,KAAKC,EAAY,eAAgBF,EAAM,CAClE,QAAS,CACP,eAAgBG,EAAgB,YAAY,CAC9C,CAAA,CACD,GACe,WACTC,EAAK,CACN,MAAAA,CACR,CACF,ikCCsNA,MAAMC,EAAeC,IACfC,EAASC,IACT,CAAE,EAAAC,GAAMC,IACRC,EAAa,qBACbC,EAAsBN,EAAI,EAAK,EAC/BO,EAAsBP,EAAI,EAAE,EAC5BQ,EAAwBR,EAAI,EAAK,EACjCS,EAAsBT,EAAI,EAAE,EAC5BU,EAAiBV,EAAI,EAAK,EAEnBW,GAAAR,EAAE,OAAO,CAAC,EACvB,KAAM,CAAE,QAAAS,EAAS,WAAAC,CAAW,EAAIC,GAAa,EAEvCC,EAAOf,EAAI,CACf,MAAO,GACP,SAAU,EAAA,CACX,EAEKgB,EAAShB,EAAI,CACjB,MAAO,GACP,SAAU,EAAA,CACX,EAEKiB,EAAYjB,EAAI,EAAK,EAE3BkB,EACE,IAAMH,EAAK,MACX,IAAM,CACJC,EAAO,MAAQ,CACb,MAAO,GACP,SAAU,EAAA,CAEd,EACA,CAAE,KAAM,EAAK,CAAA,EAGf,eAAeG,GAAQ,CACrB,GAAI,CAACJ,EAAK,MAAM,OAAS,CAACA,EAAK,MAAM,SAAU,CACxCA,EAAK,MAAM,QACdC,EAAO,MAAM,MAAQ,sBAGlBD,EAAK,MAAM,WACdC,EAAO,MAAM,SAAW,yBAE1B,MACF,CAEAC,EAAU,MAAQ,GAClB,MAAMG,GAASL,EAAK,KAAK,EACtB,KAAK,SAAY,CAChBd,EAAO,KAAK,CAAE,KAAMoB,GAAU,IAAM,CAAA,EACpCJ,EAAU,MAAQ,EAAA,CACnB,EACA,MAAOK,GAAwC,SAC9CL,EAAU,MAAQ,GAEZ,MAAAM,GAAWC,EAAAF,EAAM,WAAN,YAAAE,EAAgB,KAG7B,GAFJC,GAAWF,GAAA,YAAAA,EAAU,OAAiB,IAElCG,EAAAJ,EAAM,WAAN,YAAAI,EAAgB,UAAW,IAAK,CAClC,MAAMC,EAAaJ,GAAA,YAAAA,EAAU,YAC7B,GAAI,OAAO,KAAKI,CAAU,EAAE,OAAS,EACnC,UAAWC,KAAK,OAAO,KAAKD,CAAU,EAAG,CACvC,MAAME,EAAMD,EACNE,EAAYH,EAAsBE,CAAG,EAEvC,GAAA,OAAOC,GAAa,SACtB,UAAWC,KAAWD,EACbd,EAAA,MAAMa,CAAG,GAAKE,EACdf,EAAA,MAAMa,CAAG,GAAK,YAGhBb,EAAA,MAAMa,CAAG,EAAIC,CAExB,CAEJ,CAAA,CACD,CACL,CAEA,eAAeE,GAAiB,OAC9BxB,EAAsB,MAAQ,GAC1B,GAAA,CACF,MAAMf,GAAkB,CAAE,MAAOc,EAAoB,KAAO,CAAA,EAC5DD,EAAoB,MAAQ,GAC5BI,EAAe,MAAQ,GACvBH,EAAoB,MAAQ,SACrBe,EAAO,CACR,MAAAC,GAAYC,EAAAF,EAAuC,WAAvC,YAAAE,EAAiD,KAC/Cf,EAAA,MAAQc,GAAA,YAAAA,EAAU,YAAY,KAAA,QAClD,CACAf,EAAsB,MAAQ,EAChC,CACF,CAEM,MAAAyB,EAAaC,EAAS,IAAM,EAAqC,EAEjEhB,EAAAX,EAAsB4B,GAAU,CAChCA,IAAO1B,EAAoB,MAAQ,GAAA,CACxC,EAED,SAAS2B,GAA0B,CACjC3B,EAAoB,MAAQ,GAC5BH,EAAoB,MAAQ,EAC9B"}