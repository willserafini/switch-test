{"version":3,"file":"MessageSms-vAK2MOtm.js","sources":["../../src/components/SMS/Content/ChatSms/FailedSmsIcon.vue","../../src/components/SMS/Content/ChatSms/ContentSms.vue","../../src/components/SMS/Content/ChatSms/StatusSms.vue","../../src/components/SMS/Content/ChatSms/DetailsSms.vue","../../src/components/SMS/Content/ChatSms/MessageSms.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex align-items-center justify-content-center\">\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0.799988 13.6001L7.99999 1.6001L15.2 13.6001H0.799988ZM2.91665 12.4001H13.0833L7.99999 3.93343L2.91665 12.4001ZM7.99647 11.6001C8.16548 11.6001 8.30832 11.5429 8.42499 11.4286C8.54165 11.3143 8.59999 11.1726 8.59999 11.0036C8.59999 10.8346 8.54283 10.6918 8.4285 10.5751C8.31417 10.4584 8.1725 10.4001 8.0035 10.4001C7.83449 10.4001 7.69165 10.4573 7.57499 10.5716C7.45832 10.6859 7.39999 10.8276 7.39999 10.9966C7.39999 11.1656 7.45715 11.3084 7.57147 11.4251C7.6858 11.5418 7.82747 11.6001 7.99647 11.6001ZM7.39999 9.6001H8.59999V6.4001H7.39999V9.6001Z\"\n        fill=\"#ED254E\"\n      />\n    </svg>\n  </div>\n</template>\n<script setup lang=\"ts\"></script>\n","<template>\n  <span\n    class=\"content-sms-container\"\n    :class=\"{ success: hasSent(status), failed: hasFailed(status), me }\"\n    v-html=\"formattedMessage(message)\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\ninterface Props {\n  message: string;\n  status: {\n    status: string;\n    date: string;\n  }[];\n  me: boolean;\n}\n\ndefineProps<Props>();\n\nconst formattedMessage = computed(() => {\n  return (message: string) => {\n    return message.replaceAll('\\n\\n', '<br>');\n  };\n});\n\nconst hasFailed = computed(() => {\n  return (status: Props['status']) => {\n    const lastElementIndex = status.length - 1;\n    return status[lastElementIndex].status === 'failed';\n  };\n});\n\nconst hasSent = computed(() => {\n  return (status: Props['status']) => {\n    return status.some((s) => s.status !== 'failed');\n  };\n});\n</script>\n\n<style scoped>\n.content-sms-container {\n  min-width: 250px;\n  max-width: 900px;\n  padding: 8px;\n  font-size: 14px;\n  line-height: 19px;\n  text-align: start;\n  border-radius: 5px;\n  color: var(--button-primary-text);\n}\n\n.content-sms-container.success {\n  background-color: var(--sms);\n}\n\n.content-sms-container.failed {\n  background-color: var(--error);\n}\n</style>\n","<template>\n  <div class=\"status-sms-container\" :class=\"{ me }\">\n    <template v-if=\"me\">\n      <span\n        class=\"text-capitalize\"\n        :class=\"{ failed: hasFailed(status, 'failed') }\"\n        >{{\n          lastStatus(status) === 'readable'\n            ? 'delivered'\n            : t(lastStatus(status))\n        }}</span\n      >\n      <span>â€¢</span>\n    </template>\n    <time :datetime=\"format(new Date(date), 'yyyy-MM-dd hh:mm:ss')\">\n      {{ format(new Date(date), 'hh:mm a') }}\n    </time>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { format } from 'date-fns';\nimport { useI18n } from 'vue-i18n';\nimport { computed } from 'vue';\n\ninterface Props {\n  date: string;\n  status: {\n    status: string;\n    date: string;\n  }[];\n  me: boolean;\n}\n\ndefineProps<Props>();\nconst { t } = useI18n();\n\nconst lastStatus = computed(() => {\n  return (status: Props['status']) => {\n    return status[status.length - 1].status;\n  };\n});\n\nconst hasFailed = computed(() => {\n  return (status: Props['status'], condition: string) => {\n    return status.some((s) => s.status.includes(condition));\n  };\n});\n</script>\n\n<style scoped>\n.status-sms-container {\n  display: flex;\n  color: var(--text-secondary);\n  font-size: 12px;\n  line-height: 16px;\n  gap: 4px;\n  margin-left: 32px;\n}\n\n.status-sms-container .failed {\n  color: var(--error);\n}\n\n.status-sms-container.me {\n  margin-left: 0;\n  margin-right: 32px;\n}\n</style>\n","<template>\n  <button class=\"message-sms-details\" v-bind=\"api.triggerProps\">\n    <IThreeDots />\n  </button>\n  <Teleport to=\"body\">\n    <div v-if=\"api.isOpen\">\n      <div v-bind=\"api.backdropProps\" class=\"message-details-backdrop\" />\n      <div v-bind=\"api.positionerProps\" class=\"message-details-container\">\n        <div v-bind=\"api.contentProps\" class=\"message-details-content\">\n          <h2 v-bind=\"api.titleProps\" class=\"message-details-title\">\n            {{ t('Details') }}\n          </h2>\n          <button v-bind=\"api.closeTriggerProps\" class=\"message-details-close\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n            >\n              <path\n                d=\"M18 6L6 18\"\n                stroke=\"#697E8E\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              />\n              <path\n                d=\"M6 6L18 18\"\n                stroke=\"#697E8E\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              />\n            </svg>\n          </button>\n          <div class=\"message-details-body-container\">\n            <div class=\"message-details-body-content\">\n              <div class=\"message-details-body-content-left\">\n                <span>{{ t('Method') }}</span>\n                <span>{{ t('Status') }}</span>\n                <span>{{ t('Sender') }}</span>\n                <span>{{ t('Recipient') }}</span>\n                <span v-if=\"!!statusMessage(status, ['sent', 'readable'])\">{{\n                  t('Sent')\n                }}</span>\n                <span\n                  v-if=\"!!statusMessage(status, ['delivered', 'readable'])\"\n                  >{{ t('Delivered') }}</span\n                >\n                <span v-if=\"!!statusMessage(status, ['read'])\">{{\n                  t('Read')\n                }}</span>\n              </div>\n              <div class=\"message-details-body-content-right\">\n                <span class=\"text-uppercase\">{{ t('Sms') }}</span>\n                <span class=\"text-capitalize\">{{\n                  t(lastStatus(status)) === 'readable'\n                    ? 'delivered'\n                    : t(lastStatus(status))\n                }}</span>\n                <span>{{ phoneMasked(srcNumber) }}</span>\n                <span>{{ phoneMasked(dstNumber) }}</span>\n                <span v-if=\"!!statusMessage(status, ['sent', 'readable'])\">{{\n                  formattedTime(\n                    new Date(statusMessage(status, ['sent', 'readable'])!.date),\n                  )\n                }}</span>\n                <span\n                  v-if=\"!!statusMessage(status, ['delivered', 'readable'])\"\n                  >{{\n                    formattedTime(\n                      new Date(\n                        statusMessage(status, ['delivered', 'readable'])!.date,\n                      ),\n                    )\n                  }}</span\n                >\n                <span v-if=\"!!statusMessage(status, ['read'])\">{{\n                  formattedTime(new Date(statusMessage(status, ['read'])!.date))\n                }}</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"message-details-footer\">\n            <button\n              class=\"primary-btn text-uppercase\"\n              v-bind=\"api.closeTriggerProps\"\n            >\n              {{ t('Close') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\nimport * as dialog from '@zag-js/dialog';\nimport { normalizeProps, useMachine } from '@zag-js/vue';\nimport { computed } from 'vue';\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport { useI18n } from 'vue-i18n';\nimport { phoneMasked } from '@/utils';\nimport {\n  format,\n  isToday,\n  isWithinInterval,\n  isYesterday,\n  subDays,\n} from 'date-fns';\nimport IThreeDots from '@/components/Icons/IThreeDots.vue';\n\ninterface Props {\n  status: {\n    status: string;\n    date: string;\n  }[];\n  srcNumber: string;\n  dstNumber: string;\n}\n\ninterface Emit {\n  (e: 'details-open', value: boolean): void;\n}\n\nconst { t } = useI18n();\nconst emit = defineEmits<Emit>();\ndefineProps<Props>();\n\nconst [state, send] = useMachine(\n  (dialog as any).machine({\n    id: crypto.randomUUID(),\n    onOpen() {\n      emit('details-open', true);\n    },\n    onClose() {\n      emit('details-open', false);\n    },\n  }),\n);\nconst api = computed(() =>\n  dialog.connect(state.value as any, send, normalizeProps),\n);\n\nconst formattedTime = computed(() => {\n  return (date: Date) => {\n    if (isToday(date)) return t('Today') + ` ${format(date, 'h:mm a')}`;\n    if (isYesterday(date)) return t('Yesterday') + ` ${format(date, 'h:mm a')}`;\n    if (\n      isWithinInterval(date, {\n        end: new Date(),\n        start: subDays(new Date(), 7),\n      })\n    )\n      return format(date, 'eeee h:mm a');\n    return format(date, 'MM/d/yyyy h:mm a');\n  };\n});\n\nconst statusMessage = computed(() => {\n  return (status: Props['status'], detailStatus: string[]) => {\n    return status.find((s) => detailStatus.includes(s.status));\n  };\n});\n\nconst lastStatus = computed(() => {\n  return (status: Props['status']) => {\n    return status[status.length - 1].status;\n  };\n});\n</script>\n\n<style scoped>\n.message-sms-details {\n  all: unset;\n  cursor: pointer;\n  height: 24px;\n}\n\n.message-details-backdrop {\n  position: fixed;\n  inset: 0;\n  background: #000;\n  opacity: 0.5;\n  z-index: 1056;\n}\n\n.message-details-container {\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  z-index: 1057;\n  inset: 0;\n}\n\n.message-details-content {\n  background-color: var(--white-500);\n  position: relative;\n  width: 360px;\n  border-radius: 8px;\n}\n\n.message-details-title {\n  font-size: 16px;\n  line-height: 22px;\n  color: var(--text-primary);\n  padding: 24px;\n}\n\n.message-details-close {\n  all: unset;\n  cursor: pointer;\n  position: absolute;\n  right: 24px;\n  top: 24px;\n}\n\n.message-details-body-container {\n  border-top: 1px solid var(--line);\n  border-bottom: 1px solid var(--line);\n}\n\n.message-details-body-content {\n  display: flex;\n  gap: 16px;\n  padding: 24px;\n  color: var(--text-primary);\n  font-size: 14px;\n  line-height: 19px;\n}\n\n.message-details-body-content-left,\n.message-details-body-content-right {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 148px;\n}\n\n.message-details-footer {\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  padding: 24px;\n}\n</style>\n","<template>\n  <div\n    ref=\"containerRef\"\n    class=\"message-sms-container\"\n    :class=\"{ me }\"\n    :data-message=\"id\"\n    @mouseover=\"detailsIsVisible = true\"\n    @mouseleave=\"handleContainerLeave\"\n  >\n    <div class=\"message-sms-content\" :class=\"{ me }\">\n      <DetailsSms\n        v-if=\"detailsIsVisible\"\n        :status=\"status\"\n        :src-number=\"srcNumber\"\n        :dst-number=\"dstNumber\"\n        @details-open=\"setDetailsOpen\"\n      />\n      <FailedSmsIcon v-if=\"hasFailed(status)\" />\n      <ContentSms :message=\"message\" :status=\"status\" :me=\"me\" />\n\n      <GlobalContainerAvatar\n        v-if=\"routeNameIsSendSms && !me\"\n        background-color=\"type-unknown\"\n        radius=\"5\"\n        container-size=\"24\"\n      >\n        <IPerson size=\"14.4\" />\n      </GlobalContainerAvatar>\n      <BaseAvatar\n        v-else\n        class=\"message-sms-content-avatar\"\n        size=\"1.5rem\"\n        :status=\"avatar.status\"\n        :src=\"avatar.src\"\n      />\n    </div>\n    <StatusSms :date=\"date\" :status=\"status\" :me=\"me\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport FailedSmsIcon from '@/components/SMS/Content/ChatSms/FailedSmsIcon.vue';\nimport ContentSms from '@/components/SMS/Content/ChatSms/ContentSms.vue';\nimport StatusSms from '@/components/SMS/Content/ChatSms/StatusSms.vue';\nimport BaseAvatar from '@/components/BaseAvatar.vue';\nimport DetailsSms from '@/components/SMS/Content/ChatSms/DetailsSms.vue';\nimport { useRoute } from 'vue-router';\nimport { computed, ref } from 'vue';\nimport { Color, RouteName } from '@/enums';\nimport { useAvatar } from '@/composables';\nimport unknownImg from '@/assets/images/unknown.png';\nimport GlobalContainerAvatar from '@/components/Global/GlobalContainerAvatar.vue';\nimport IPerson from '@/components/Icons/IPerson.vue';\n\ninterface Props {\n  date: string;\n  message: string;\n  me: boolean;\n  status: {\n    status: string;\n    date: string;\n  }[];\n  srcUser: number | null;\n  srcNumber: string;\n  dstNumber: string;\n  id: string;\n}\n\nconst props = defineProps<Props>();\nconst route = useRoute();\nconst { avatar } = useAvatar({ me: props.me, srcUser: props.srcUser });\n\nconst containerRef = ref<HTMLDivElement>();\nconst detailsIsVisible = ref(false);\nconst detailsOpen = ref(false);\nconst routeNameIsSendSms = computed(\n  () =>\n    RouteName.SendSms === route.name || RouteName.FavoritePhone === route.name\n);\n\nfunction setDetailsOpen(value: boolean) {\n  detailsOpen.value = value;\n\n  if (!value) {\n    detailsIsVisible.value = false;\n  }\n}\n\nfunction handleContainerLeave() {\n  setTimeout(() => {\n    if (detailsOpen.value) return;\n    detailsIsVisible.value = false;\n  }, 300);\n}\n\nconst hasFailed = computed(() => {\n  return (status: Props['status']) => {\n    const lastElementIndex = status.length - 1;\n    return status[lastElementIndex].status === 'failed';\n  };\n});\n\ndefineExpose({\n  containerRef,\n});\n</script>\n\n<style scoped>\n.message-sms-container {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 8px 20px;\n  align-items: start;\n}\n\n.message-sms-container.me {\n  align-items: end;\n}\n\n.message-sms-content {\n  display: flex;\n  gap: 8px;\n  flex-direction: row-reverse;\n}\n\n.message-sms-content.me {\n  flex-direction: row;\n}\n\n.message-sms-content-avatar {\n  align-self: start;\n}\n</style>\n"],"names":["_hoisted_2","_createElementVNode","_hoisted_3","_cache","formattedMessage","computed","message","hasFailed","status","lastElementIndex","hasSent","s","t","useI18n","lastStatus","condition","emit","__emit","state","send","useMachine","dialog.machine","api","dialog.connect","normalizeProps","formattedTime","date","isToday","format","isYesterday","isWithinInterval","subDays","statusMessage","detailStatus","props","__props","route","useRoute","avatar","useAvatar","containerRef","ref","detailsIsVisible","detailsOpen","routeNameIsSendSms","RouteName","setDetailsOpen","value","handleContainerLeave","__expose"],"mappings":"qqBAaU,EAVJA,EAAUC,EAAA,MAAA,CACV,WACA,YACA,QAAW,YACX,iDAGijBA,EAAA,OAAA,CAC/iB,EAAA,okBAEEC,GAAA,kBACFC,EAAA,2JCQF,MAAAC,EAAmBC,EAAS,IACxBC,GACCA,EAAQ,WAAW;AAAA;AAAA,EAAQ,MAAM,CAE3C,EAEKC,EAAYF,EAAS,IACjBG,GAA4B,CAC5B,MAAAC,EAAmBD,EAAO,OAAS,EAClC,OAAAA,EAAOC,CAAgB,EAAE,SAAW,QAAA,CAE9C,EAEKC,EAAUL,EAAS,IACfG,GACCA,EAAO,KAAMG,GAAMA,EAAE,SAAW,QAAQ,CAElD,+XCJK,KAAA,CAAE,EAAAC,GAAMC,IAERC,EAAaT,EAAS,IAClBG,GACCA,EAAOA,EAAO,OAAS,CAAC,EAAE,MAEpC,EAEKD,EAAYF,EAAS,IAClB,CAACG,EAAyBO,IACxBP,EAAO,KAAMG,GAAMA,EAAE,OAAO,SAASI,CAAS,CAAC,CAEzD,+vCCgFK,KAAA,CAAE,EAAAH,GAAMC,IACRG,EAAOC,EAGP,CAACC,EAAOC,CAAI,EAAIC,EACnBC,EAAuB,CACtB,GAAI,OAAO,WAAW,EACtB,QAAS,CACPL,EAAK,eAAgB,EAAI,CAC3B,EACA,SAAU,CACRA,EAAK,eAAgB,EAAK,CAC5B,CAAA,CACD,CAAA,EAEGM,EAAMjB,EAAS,IACnBkB,EAAeL,EAAM,MAAcC,EAAMK,CAAc,CAAA,EAGnDC,EAAgBpB,EAAS,IACrBqB,GACFC,EAAQD,CAAI,EAAUd,EAAE,OAAO,EAAI,IAAIgB,EAAOF,EAAM,QAAQ,CAAC,GAC7DG,EAAYH,CAAI,EAAUd,EAAE,WAAW,EAAI,IAAIgB,EAAOF,EAAM,QAAQ,CAAC,GAEvEI,EAAiBJ,EAAM,CACrB,QAAS,KACT,MAAOK,EAAY,IAAA,KAAQ,CAAC,CAAA,CAC7B,EAEMH,EAAOF,EAAM,aAAa,EAC5BE,EAAOF,EAAM,kBAAkB,CAEzC,EAEKM,EAAgB3B,EAAS,IACtB,CAACG,EAAyByB,IACxBzB,EAAO,KAAMG,GAAMsB,EAAa,SAAStB,EAAE,MAAM,CAAC,CAE5D,EAEKG,EAAaT,EAAS,IAClBG,GACCA,EAAOA,EAAO,OAAS,CAAC,EAAE,MAEpC,s4DCvGD,MAAM0B,EAAQC,EACRC,EAAQC,IACR,CAAE,OAAAC,CAAO,EAAIC,EAAU,CAAE,GAAIL,EAAM,GAAI,QAASA,EAAM,OAAS,CAAA,EAE/DM,EAAeC,IACfC,EAAmBD,EAAI,EAAK,EAC5BE,EAAcF,EAAI,EAAK,EACvBG,EAAqBvC,EACzB,IACEwC,EAAU,UAAYT,EAAM,MAAQS,EAAU,gBAAkBT,EAAM,IAAA,EAG1E,SAASU,EAAeC,EAAgB,CACtCJ,EAAY,MAAQI,EAEfA,IACHL,EAAiB,MAAQ,GAE7B,CAEA,SAASM,GAAuB,CAC9B,WAAW,IAAM,CACXL,EAAY,QAChBD,EAAiB,MAAQ,KACxB,GAAG,CACR,CAEM,MAAAnC,EAAYF,EAAS,IACjBG,GAA4B,CAC5B,MAAAC,EAAmBD,EAAO,OAAS,EAClC,OAAAA,EAAOC,CAAgB,EAAE,SAAW,QAAA,CAE9C,EAEY,OAAAwC,EAAA,CACX,aAAAT,CAAA,CACD"}