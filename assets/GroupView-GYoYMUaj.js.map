{"version":3,"file":"GroupView-GYoYMUaj.js","sources":["../../src/components/Chat/BaseGroupChatConference.vue","../../src/components/Chat/BaseGroupChatCall.vue","../../src/components/Chat/BaseGroupMessage.vue","../../src/components/Chat/BaseGroupChat.vue","../../src/components/Group/AboutGroup.vue","../../src/views/GroupView.vue"],"sourcesContent":["<template>\n  <div class=\"author\">\n    <figure class=\"avatar\">\n      <IVideo />\n    </figure>\n  </div>\n  <div class=\"contents\">\n    <div class=\"bubble\">\n      <h2>{{ t('Meeting') }}</h2>\n      <div class=\"participants\">\n        <BaseAvatar\n          v-for=\"participant in contentObject.participants\"\n          :key=\"participant.user_id\"\n          :src=\"`${indexesStore.avatars[participant.user_id][32]}`\"\n          :status=\"undefined\"\n          size=\"1.5rem\"\n          :class=\"[\n            'cursor-pointer',\n            !participant.in_meeting ? 'leftConference' : '',\n          ]\"\n          :title=\"getNameByUserId(participant.user_id)\"\n        />\n        <div\n          v-if=\"titlePlusUsers.showPlusIcon\"\n          :title=\"titlePlusUsers.title\"\n          class=\"avatar plusUsers\"\n        >\n          <span>+{{ titlePlusUsers.qtd }}</span>\n        </div>\n        <p\n          v-if=\"confereceEnded(contentObject.status, props.message.created_at)\"\n        >\n          {{ t('Ended') }}\n        </p>\n        <button\n          v-else\n          class=\"primary-btn text-uppercase\"\n          @click=\"joinConference\"\n        >\n          {{ t('Join') }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport type { ContentChatConference } from '@/utils/db/types';\nimport { computed, type ComputedRef } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useIndexesStore } from '@/stores/indexes';\nimport BaseAvatar from '@/components/BaseAvatar.vue';\nimport type { ChatGroupMessages } from '@/types';\nimport { useUserStore, useGroupMessageStore } from '@/stores';\nimport { Color } from '@/enums';\nimport { confereceEnded } from '@/utils';\nimport IVideo from '@/components/Icons/IVideo.vue';\n\ninterface Props {\n  message: ChatGroupMessages;\n}\n\nconst props = defineProps<Props>();\nconst { t } = useI18n();\nconst indexesStore = useIndexesStore();\nconst { getNameByUserId } = useUserStore();\nconst { acceptConference } = useGroupMessageStore();\nconst maxNumberOfParticipants = 5;\n\nconst contentObject: ComputedRef<ContentChatConference> = computed(() => {\n  const content: ContentChatConference = JSON.parse(props.message.content);\n  content.participants.sort((a, b) => {\n    return Number(b.in_meeting) - Number(a.in_meeting);\n  });\n  if (content.participants.length > maxNumberOfParticipants) {\n    content.participants.splice(maxNumberOfParticipants - 1);\n  }\n  return content;\n});\n\nconst titlePlusUsers = computed(() => {\n  const content: ContentChatConference = JSON.parse(props.message.content);\n  let showPlusIcon = false;\n  const plusUsers = content.participants.filter(\n    (obj1) =>\n      !contentObject.value.participants.some(\n        (obj2) => obj1.user_id === obj2.user_id\n      )\n  );\n\n  let titlePlusUsersString = '';\n  if (plusUsers.length) {\n    showPlusIcon = true;\n    for (const participant of plusUsers) {\n      titlePlusUsersString += getNameByUserId(participant.user_id) + '\\n';\n    }\n  }\n\n  return {\n    showPlusIcon,\n    title: titlePlusUsersString,\n    qtd: content.participants.length - maxNumberOfParticipants + 1,\n  };\n});\n\nfunction joinConference() {\n  acceptConference({\n    message: props.message,\n    token: contentObject.value.token,\n  });\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n</style>\n\n<style scoped>\n.plusUsers {\n  background-color: v-bind('Color.SPAGray300');\n  color: #344767;\n  font-size: 14px;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.plusUsers span {\n  text-align: center;\n}\n</style>\n","<template>\n  <div class=\"author\">\n    <figure class=\"avatar\">\n      <IPhone />\n    </figure>\n  </div>\n  <div\n    class=\"contents\"\n    :title=\"\n      props.message.src_user === loggedUserId\n        ? t('Called From') + ' ' + contentObject.src_number\n        : t('Received From') + ' ' + contentObject.dst_number\n    \"\n  >\n    <div class=\"bubble\">\n      <h2>{{ t('Call') }}</h2>\n      <p>\n        <BaseIcon\n          :name=\"\n            props.message.src_user === loggedUserId\n              ? 'arrow-up-right'\n              : 'arrow-down-left'\n          \"\n          :size=\"12\"\n        />\n        {{\n          props.message.src_user === loggedUserId\n            ? contentObject.dst_number\n            : contentObject.src_number\n        }}\n        &bull; {{ textStatusMessage }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { format } from 'date-fns';\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport type { ContentCall, GroupMessage } from '@/utils/db/types';\nimport { computed, type ComputedRef } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { Time } from '@/enums';\nimport { capitalize } from 'lodash';\nimport IPhone from '@/components/Icons/IPhone.vue';\n\ninterface Props {\n  message: GroupMessage;\n  loggedUserId: number;\n}\n\nconst props = defineProps<Props>();\nconst { t } = useI18n();\n\nconst contentObject: ComputedRef<ContentCall> = computed(() => {\n  return JSON.parse(props.message.content);\n});\n\nconst textStatusMessage: ComputedRef<string> = computed(() => {\n  if (contentObject.value.status == 'FINISHED') {\n    const duration = contentObject.value.duration as number;\n    if (duration < 60 * Time.Second) {\n      return format(duration, \"'\" + t('Lasted') + \"' s 'sec'\");\n    }\n\n    if (duration < 60 * Time.Minute) {\n      return format(duration, \"'\" + t('Lasted') + \"' m 'min' s 'sec'\");\n    }\n\n    return format(duration, \"'\" + t('Lasted') + \"' h 'hour' m 'min' s 'sec'\");\n  }\n\n  return t(capitalize(contentObject.value.status));\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n</style>\n","<template>\n  <div\n    class=\"base-chat-message-container\"\n    :data-message=\"chatGroupMessage.id\"\n    :class=\"{ me }\"\n    @mouseover=\"onMouseover\"\n    @mouseleave=\"onMouseLeave\"\n  >\n    <div class=\"base-chat-message-content\" :class=\"{ me }\">\n      <BaseAvatar\n        v-if=\"hasAvatar\"\n        class=\"message-sms-content-avatar\"\n        size=\"1.5rem\"\n        :status=\"avatar.status\"\n        :src=\"avatar.src\"\n      />\n      <div v-else class=\"base-chat-message-not-avatar\" />\n      <div></div>\n      <div class=\"base-chat-message\">\n        <div\n          v-if=\"content(chatGroupMessage)\"\n          v-html=\"content(chatGroupMessage)\"\n        />\n        <div\n          v-if=\"chatGroupMessage.type === 'attachment'\"\n          class=\"base-chat-attachments\"\n        >\n          <AttachmentList\n            v-for=\"(file, index) in JSON.parse(chatGroupMessage.content).files as FileAttachment[]\"\n            :key=\"index\"\n            :file-data=\"file\"\n          />\n        </div>\n      </div>\n      <DeleteAttachments\n        v-if=\"deleteAttachmentIsIsVisible && chatGroupMessage.type === 'attachment' && me && filesAttachments(JSON.parse(chatGroupMessage.content).files as FileAttachment[]).length > 0\"\n        :files=\"filesAttachments(JSON.parse(chatGroupMessage.content).files as FileAttachment[])\"\n        :me=\"me\"\n        @change=\"setDeleteAttachmentIsOpen\"\n        @delete=\"handleSelectedAttachment\"\n      />\n    </div>\n    <BaseTimeBoxMessage\n      v-if=\"hasTime\"\n      :date-string=\"chatGroupMessage.created_at\"\n      class=\"base-chat-message-time\"\n      :class=\"{ me }\"\n    />\n  </div>\n  <AttachmentDelete\n    v-if=\"modalDeleteAttachment\"\n    :file-data=\"fileData\"\n    @delete=\"(id) => handleGroupDeleteAttachment(id, chatGroupMessage.created_at, filesAttachments(JSON.parse(chatGroupMessage.content).files as FileAttachment[]))\"\n    @close=\"modalDeleteAttachment = false\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport BaseAvatar from '@/components/BaseAvatar.vue';\nimport { useAttachmentsComponent, useAvatar } from '@/composables';\nimport BaseTimeBoxMessage from '@/components/Chat/BaseTimeBoxMessage.vue';\nimport AttachmentList from '@/components/Attachments/AttachmentList.vue';\nimport type { ChatGroupMessages, FileAttachment } from '@/types';\nimport { computed } from 'vue';\nimport { useUserStore } from '@/stores';\nimport DeleteAttachments from '@/components/Attachments/DeleteAttachments.vue';\nimport AttachmentDelete from '@/components/Attachments/AttachmentDelete.vue';\nimport { Color } from '@/enums';\n\ninterface Props {\n  chatGroupMessage: ChatGroupMessages;\n  me: boolean;\n  hasAvatar: boolean;\n  hasTime: boolean;\n  hasName: boolean;\n}\n\nconst {\n  fileData,\n  filesAttachments,\n  modalDeleteAttachment,\n  deleteAttachmentIsIsVisible,\n  setDeleteAttachmentIsOpen,\n  handleGroupDeleteAttachment,\n  handleSelectedAttachment,\n  onMouseover,\n  onMouseLeave,\n} = useAttachmentsComponent();\n\nconst props = defineProps<Props>();\nconst { avatar } = useAvatar({\n  me: props.me,\n  srcUser: props.chatGroupMessage.src_user,\n});\nconst { getNameByUserId } = useUserStore();\n\nconst content = computed(() => {\n  return (chatGroupMessage: ChatGroupMessages) => {\n    if (chatGroupMessage.type === 'attachment') {\n      const messageParsed = JSON.parse(chatGroupMessage.content).message;\n      const message = messageParsed ? messageParsed : '';\n\n      return props.hasName\n        ? `<span class=\"font-size-12 font-weight-700\" style=\"color: ${\n            Color.TextPrimary\n          }\">${getNameByUserId(chatGroupMessage.src_user)}</span><br>` + message\n        : message;\n    }\n\n    return props.hasName\n      ? `<span class=\"font-size-12 font-weight-700\" style=\"color: ${\n          Color.TextPrimary\n        }\">${getNameByUserId(chatGroupMessage.src_user)}</span><br>` +\n          chatGroupMessage.content\n      : chatGroupMessage.content;\n  };\n});\n</script>\n\n<style scoped>\n.base-chat-message-container {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  padding: 8px 20px 0;\n  gap: 4px;\n}\n\n.base-chat-message-container.me {\n  align-items: end;\n}\n\n.base-chat-message-content {\n  display: flex;\n  gap: 4px;\n}\n\n.base-chat-message-not-avatar {\n  width: 24px;\n  height: 24px;\n}\n\n.base-chat-message-content.me {\n  flex-direction: row-reverse;\n}\n\n.base-chat-message-time {\n  padding-bottom: 8px;\n  margin-left: 32px;\n}\n\n.base-chat-message-time.me {\n  margin-left: 0;\n  margin-right: 32px;\n}\n\n.base-chat-message {\n  min-width: 250px;\n  max-width: 900px;\n  padding: 8px;\n  font-size: 14px;\n  line-height: 19px;\n  text-align: start;\n  border-radius: 5px;\n  color: var(--text-primary);\n  background-color: var(--white-500);\n  border: 1px solid var(--line);\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.base-chat-attachments {\n  display: flex;\n  gap: 6px;\n  flex-wrap: wrap;\n}\n</style>\n\n<style>\n.base-chat-message p {\n  margin: 0;\n}\n\n.base-chat-message ul {\n  margin: 0;\n}\n\n.base-chat-message blockquote {\n  border-left-color: #9fb3cd;\n  border-left-style: solid;\n  border-left-width: 2px;\n  color: var(--text-primary);\n  margin: 4px 0;\n  padding-left: 8px;\n}\n\n.base-chat-message code {\n  background-color: #f3f5f9;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  color: var(--text-primary);\n  font-size: 12px;\n  margin: 4px 0;\n  padding: 8px;\n  display: block;\n}\n</style>\n","<template>\n  <div class=\"base-chat-container\">\n    <template\n      v-for=\"(groupMessage, index) in chatGroupMessages\"\n      :key=\"groupMessage.id\"\n    >\n      <BaseDayDivider\n        v-if=\"isFirstMessageOfTheDay(chatGroupMessages, index)\"\n        :date-string=\"groupMessage.created_at\"\n      />\n      <BaseGroupMessage\n        v-if=\"\n          groupMessage.type == 'message' || groupMessage.type == 'attachment'\n        \"\n        :has-avatar=\"hasAvatar(chatGroupMessages, index)\"\n        :chat-group-message=\"groupMessage\"\n        :me=\"userStore.user.userId === groupMessage.src_user\"\n        :has-time=\"hasTime(chatGroupMessages, index)\"\n        :has-name=\"hasName(chatGroupMessages, index)\"\n      />\n      <div\n        v-if=\"groupMessage.type === 'conference'\"\n        :data-message=\"groupMessage.id\"\n        :class=\"getClassArticle(groupMessage)\"\n      >\n        <BaseGroupChatConference :message=\"groupMessage\" />\n      </div>\n      <div\n        v-if=\"groupMessage.type === 'call'\"\n        :data-message=\"groupMessage.id\"\n        :class=\"getClassArticle(groupMessage)\"\n      >\n        <BaseGroupChatCall\n          :logged-user-id=\"userStore.user.userId\"\n          :message=\"groupMessage\"\n        />\n      </div>\n      <BaseTimeBoxMessage\n        v-if=\"\n          groupMessage.type !== 'message' && groupMessage.type !== 'attachment'\n        \"\n        :date-string=\"groupMessage.created_at\"\n        :class=\"getClassArticle(groupMessage)\"\n      />\n    </template>\n    <BaseTyping\n      v-if=\"isTyping\"\n      :class=\"{ 'mt-3': chatGroupMessages.length === 0 }\"\n      :user-id=\"typingGroupUserId(Number(groupId))\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { ChatGroupMessages } from '@/types';\nimport { computed, ref, watchEffect } from 'vue';\nimport { format } from 'date-fns';\nimport { useUserStore } from '@/stores';\nimport BaseDayDivider from '@/components/Chat/BaseDayDivider.vue';\nimport BaseTimeBoxMessage from '@/components/Chat/BaseTimeBoxMessage.vue';\nimport BaseGroupChatConference from '@/components/Chat/BaseGroupChatConference.vue';\nimport BaseGroupChatCall from '@/components/Chat/BaseGroupChatCall.vue';\nimport { useRoute } from 'vue-router';\nimport { useTyping } from '@/composables';\nimport BaseTyping from '@/components/Chat/BaseTyping.vue';\nimport BaseGroupMessage from '@/components/Chat/BaseGroupMessage.vue';\n\ninterface Props {\n  chatGroupMessages: ChatGroupMessages[];\n  height?: string;\n}\n\ndefineProps<Props>();\n\nconst userStore = useUserStore();\nconst route = useRoute();\nconst { typingGroup, typingGroupUserId } = useTyping();\n\nconst routeName = ref('');\nconst groupId = ref<number>();\n\nconst isTyping = computed(() => {\n  if (!groupId.value) return false;\n  return typingGroup.value(routeName.value, groupId.value).length > 0;\n});\n\nfunction getClassArticle(groupMessage: ChatGroupMessages) {\n  const userStore = useUserStore();\n  if (groupMessage.type == 'conference') {\n    return groupMessage.src_user === userStore.user.userId\n      ? 'my party meeting item'\n      : 'party meeting item';\n  }\n\n  if (groupMessage.type == 'call') {\n    return groupMessage.src_user === userStore.user.userId\n      ? 'my call item'\n      : 'party call item';\n  }\n\n  return groupMessage.src_user === userStore.user.userId\n    ? 'my message item'\n    : 'party message item';\n}\n\nconst isFirstMessageOfTheDay = computed(() => {\n  return (groupMessages: ChatGroupMessages[], index: number) => {\n    const indexFirstElement = 0;\n\n    if (groupMessages.length === 1 || index === indexFirstElement) return true;\n    const currentDateFormatted = format(\n      new Date(groupMessages[index].created_at),\n      'dd-MM-yyyy'\n    );\n    const previousDateFormatted = format(\n      new Date(groupMessages[index - 1].created_at),\n      'dd-MM-yyyy'\n    );\n    return currentDateFormatted !== previousDateFormatted;\n  };\n});\n\nconst hasAvatar = computed(() => {\n  return (groupMessages: ChatGroupMessages[], index: number) => {\n    const indexFirstElement = 0;\n\n    if (groupMessages.length === 1 || index === indexFirstElement) return true;\n\n    const currentType = groupMessages[index].type;\n    const previousType = groupMessages[index - 1].type;\n\n    const currentDateFormatted = format(\n      new Date(groupMessages[index].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const previousDateFormatted = format(\n      new Date(groupMessages[index - 1].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const currentSourceUser = groupMessages[index].src_user;\n    const previousSourceUser = groupMessages[index - 1].src_user;\n\n    if (\n      currentType !== 'message' ||\n      previousType !== 'message' ||\n      currentType !== previousType ||\n      currentSourceUser !== previousSourceUser ||\n      currentDateFormatted !== previousDateFormatted\n    )\n      return true;\n\n    const currentTimeFormatted = format(\n      new Date(groupMessages[index].created_at),\n      'hh:mm'\n    );\n\n    const previousTimeFormatted = format(\n      new Date(groupMessages[index - 1].created_at),\n      'hh:mm'\n    );\n\n    return currentTimeFormatted !== previousTimeFormatted;\n  };\n});\n\nconst hasTime = computed(() => {\n  return (groupMessages: ChatGroupMessages[], index: number) => {\n    const indexLastElement = groupMessages.length - 1;\n\n    if (groupMessages.length === 1 || indexLastElement === index) return true;\n\n    const currentType = groupMessages[index].type;\n    const nextType = groupMessages[index + 1].type;\n\n    const currentDateFormatted = format(\n      new Date(groupMessages[index].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const nextDateFormatted = format(\n      new Date(groupMessages[index + 1].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const currentSourceUser = groupMessages[index].src_user;\n    const nextSourceUser = groupMessages[index + 1].src_user;\n\n    if (\n      currentType !== 'message' ||\n      nextType !== 'message' ||\n      currentType !== nextType ||\n      currentSourceUser !== nextSourceUser ||\n      currentDateFormatted !== nextDateFormatted\n    )\n      return true;\n\n    const currentTimeFormatted = format(\n      new Date(groupMessages[index].created_at),\n      'hh:mm'\n    );\n\n    const nextTimeFormatted = format(\n      new Date(groupMessages[index + 1].created_at),\n      'hh:mm'\n    );\n\n    return currentTimeFormatted !== nextTimeFormatted;\n  };\n});\n\nconst hasName = computed(() => {\n  return (groupMessages: ChatGroupMessages[], index: number) => {\n    const indexFirstElement = 0;\n\n    if (groupMessages.length === 1 || index === indexFirstElement) return true;\n\n    const currentType = groupMessages[index].type;\n    const previousType = groupMessages[index - 1].type;\n\n    const currentDateFormatted = format(\n      new Date(groupMessages[index].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const previousDateFormatted = format(\n      new Date(groupMessages[index - 1].created_at),\n      'dd-MM-yyyy'\n    );\n\n    const currentSourceUser = groupMessages[index].src_user;\n    const previousSourceUser = groupMessages[index - 1].src_user;\n\n    if (\n      currentType !== 'message' ||\n      previousType !== 'message' ||\n      currentType !== previousType ||\n      currentSourceUser !== previousSourceUser ||\n      currentDateFormatted !== previousDateFormatted\n    )\n      return true;\n\n    const currentTimeFormatted = format(\n      new Date(groupMessages[index].created_at),\n      'hh:mm'\n    );\n\n    const previousTimeFormatted = format(\n      new Date(groupMessages[index - 1].created_at),\n      'hh:mm'\n    );\n\n    return currentTimeFormatted !== previousTimeFormatted;\n  };\n});\n\nwatchEffect(() => {\n  routeName.value = route.name as string;\n  groupId.value = parseInt(route.params.id as string, 10);\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n$marginMessage: 32px;\n$paddingTime: 16px;\n$authorSpace: 16px;\n\n.base-chat-container {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  height: v-bind('height');\n}\n\ntime.party,\ntime.my {\n  padding-top: 0;\n  padding-bottom: 16px;\n  margin-top: 4px;\n}\ntime.party {\n  margin-left: $marginMessage;\n  padding-left: $paddingTime;\n}\n\ntime.my {\n  margin-right: $marginMessage;\n  padding-right: $paddingTime;\n}\n\n.ql-editor.my,\n.ql-editor.party {\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-bottom: 4px;\n}\n\n.ql-editor.my {\n  margin-right: $marginMessage;\n  padding-right: $paddingTime;\n}\n\n.ql-editor.party {\n  margin-left: $marginMessage;\n  padding-left: $paddingTime;\n}\n\n.author {\n  position: absolute;\n  padding: 0;\n}\n\n.author.my {\n  right: $authorSpace;\n}\n\n.author.party {\n  left: $authorSpace;\n}\n\n.meeting,\n.call {\n  padding-bottom: 0;\n}\n\n.bubble.ql-editor {\n  max-height: fit-content;\n}\n</style>\n","<template>\n  <BaseModal\n    v-model=\"modal\"\n    max-width=\"640px\"\n    min-height=\"383px\"\n    max-height=\"383px\"\n    scrollable\n  >\n    <template #header>\n      <span :style=\"{ color: Color.TextPrimary }\">{{\n        t('About this Group')\n      }}</span>\n    </template>\n    <template #body>\n      <div class=\"m-4\" style=\"width: 280px\">\n        <div class=\"input-group\">\n          <BaseIcon name=\"search\" :size=\"18\" />\n          <input\n            v-model=\"search\"\n            class=\"form-control border-0\"\n            :placeholder=\"t('Search for user')\"\n            @input=\"searching\"\n          />\n        </div>\n      </div>\n      <div class=\"m-4 d-flex flex-column\" style=\"height: 110px\">\n        <GlobalTable :columns=\"usersColumn\" :rows=\"users\"> </GlobalTable>\n        <div\n          v-if=\"users.length === 0\"\n          class=\"d-flex flex-column h-100 flex-grow-1 justify-content-center align-items-center\"\n          :style=\"{ borderTop: `1px solid ${Color.Line}` }\"\n        >\n          <span class=\"font-size-14\" :style=\"{ color: '#67748E' }\">\n            {{ t('No results found') }}\n          </span>\n        </div>\n      </div>\n    </template>\n    <template #footer>\n      <div class=\"d-flex justify-content-end\">\n        <button class=\"primary-btn text-uppercase\" @click=\"hideModal\">\n          {{ t('Done') }}\n        </button>\n      </div>\n    </template>\n  </BaseModal>\n</template>\n\n<script setup lang=\"ts\">\nimport BaseModal from '@/components/BaseModal.vue';\nimport { onMounted, ref, watch } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { Color } from '@/enums';\nimport type { ColumnsTable, Group } from '@/types';\nimport GlobalTable from '@/components/Global/GlobalTable.vue';\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport { useRoute } from 'vue-router';\nimport { useUserStore } from '@/stores';\n\ninterface User {\n  id: number;\n  name: string;\n}\n\ninterface Props {\n  modalGroup: boolean;\n}\n\ninterface Emits {\n  (e: 'update:modalGroup', value: boolean): void;\n}\n\nconst { t } = useI18n();\nconst route = useRoute();\nconst userStore = useUserStore();\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst modal = ref(props.modalGroup);\nconst search = ref('');\nconst id = ref('');\nconst users = ref<User[]>([]);\n\nconst usersColumn: ColumnsTable[] = [\n  { headerName: t('User'), field: 'name', sorted: true },\n];\n\nfunction searching(event: Event) {\n  const word = (event.target as HTMLInputElement).value;\n\n  if (word === '')\n    return (users.value = userStore.groupById(parseInt(id.value))?.users ?? []);\n\n  users.value =\n    userStore\n      .groupById(parseInt(id.value))\n      ?.users.filter((user) =>\n        user.name.toLowerCase().includes(word.toLowerCase())\n      ) ?? [];\n}\n\nfunction hideModal() {\n  emit('update:modalGroup', false);\n}\n\nwatch(\n  () => props.modalGroup,\n  (value) => (modal.value = value)\n);\n\nwatch(modal, (value) => emit('update:modalGroup', value));\n\nwatch(\n  () => route.params.id,\n  (value) => {\n    id.value = value as string;\n    users.value = userStore.groupById(parseInt(id.value))?.users ?? [];\n  }\n);\n\nonMounted(() => {\n  id.value = route.params.id as string;\n  users.value = userStore.groupById(parseInt(id.value))?.users ?? [];\n});\n</script>\n\n<style scoped lang=\"scss\">\n.input-group {\n  width: 280px;\n  height: 37px;\n  padding-left: 12px;\n  font-size: 14px;\n  background: var(--input-bg);\n  border: 1px solid var(--input-border);\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n\n  input {\n    background: transparent !important;\n    color: var(--input-text);\n\n    &::placeholder {\n      color: var(--input-text-placeholder);\n    }\n  }\n\n  &:focus-within {\n    border-color: var(--input-border-focus);\n\n    svg {\n      color: var(--input-icon-focus);\n    }\n  }\n}\n</style>\n","<template>\n  <main id=\"chat-container\">\n    <div ref=\"panelRef\" class=\"panel\">\n      <div class=\"chat-header\">\n        <SidebarToogle />\n        <div class=\"chat-header-left\">\n          <div class=\"contact-info\" @click=\"showInfoPane\">\n            <GlobalContainerAvatar\n              background-color=\"type-groups\"\n              radius=\"5\"\n              container-size=\"24\"\n            >\n              <IGroupV1 size=\"15\" />\n            </GlobalContainerAvatar>\n            <GlobalText\n              as=\"h2\"\n              :size=\"16\"\n              :weight=\"700\"\n              color=\"brand-blue-500\"\n              class=\"m-0\"\n              >{{ participants(group as Group) }}</GlobalText\n            >\n          </div>\n        </div>\n        <div class=\"chat-header-right chat-actions\">\n          <ul>\n            <li @click=\"toggleFavorite\">\n              <button\n                href=\"javascript:\"\n                class=\"favorite-container\"\n                :class=\"{ 'is-favorite': group?.favorite }\"\n              >\n                <ChatStarYellow class=\"yellow\" />\n                <ChatStar class=\"blue\" />\n              </button>\n            </li>\n            <li>\n              <button href=\"javascript:\" class=\"call-container\" disabled>\n                <ChatPhone />\n              </button>\n            </li>\n            <li>\n              <button\n                class=\"meeting-container\"\n                href=\"javascript:\"\n                @click=\"\n                  groupMessageStore.newGroupConference(\n                    parseInt(id),\n                    userStore.groupUsersById(parseInt(id))\n                  )\n                \"\n              >\n                <ChatMeeting />\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div class=\"chat-body-outer\">\n        <div v-show=\"loadingMessages\" class=\"loading-messages\">\n          <BaseIcon\n            name=\"loader\"\n            class=\"feather feather-loader spin\"\n            size=\"md\"\n            :color=\"Color.LineIcon\"\n          />\n        </div>\n        <NoActivity\n          v-show=\"\n            !loadingMessages &&\n            !Object.keys(daysMessages).length &&\n            typing.length === 0\n          \"\n        />\n        <div\n          v-show=\"\n            (!loadingMessages && Object.keys(daysMessages).length) ||\n            typing.length > 0\n          \"\n          class=\"chat-body-inner\"\n        >\n          <perfect-scrollbar\n            ref=\"scrollbar\"\n            :watch-options=\"true\"\n            :options=\"{ suppressScrollY }\"\n            @ps-scroll-up=\"scrollUp\"\n            @ps-scroll-down=\"scrollDown\"\n          >\n            <BaseGroupChat :chat-group-messages=\"daysMessages\" />\n          </perfect-scrollbar>\n        </div>\n      </div>\n      <BaseEditor @height=\"changeHeight\" />\n    </div>\n  </main>\n  <AboutGroup v-model:modal-group=\"modal\" />\n</template>\n\n<script setup lang=\"ts\">\nimport BaseIcon from '@/components/BaseIcon.vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport {\n  onBeforeMount,\n  ref,\n  watch,\n  computed,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n} from 'vue';\nimport type { ComputedRef } from 'vue';\nimport type { ChatGroupMessages, Group } from '@/types';\nimport { useUserStore } from '@/stores';\nimport { Color, RouteName, Time } from '@/enums';\nimport {\n  useGroup,\n  useSetFavorite,\n  useDeleteFavoriteGroup,\n  useTyping,\n  useChat,\n} from '@/composables';\nimport { useGroupMessageStore } from '@/stores';\nimport { format } from 'date-fns';\nimport { collect } from 'collect.js';\nimport { useIndexesStore } from '@/stores/indexes';\nimport BaseGroupChat from '@/components/Chat/BaseGroupChat.vue';\nimport { useElementSize } from '@vueuse/core';\nimport { useI18n } from 'vue-i18n';\nimport AboutGroup from '@/components/Group/AboutGroup.vue';\nimport { checkInternetConnection } from '@/utils';\nimport BaseEditor from '@/components/SMS/Fotter/BaseSmsFooter.vue';\nimport { toastError } from '@/utils';\nimport { GlobalText } from '@/components/Global/Text';\nimport NoActivity from '@/components/Chat/NoActivity.vue';\nimport GlobalContainerAvatar from '@/components/Global/GlobalContainerAvatar.vue';\nimport IGroupV1 from '@/components/Icons/IGroupV1.vue';\nimport ChatStarYellow from '@/components/Chat/ChatStarYellow.vue';\nimport ChatStar from '@/components/Chat/ChatStar.vue';\nimport ChatPhone from '@/components/Chat/ChatPhone.vue';\nimport ChatMeeting from '@/components/Chat/ChatMeeting.vue';\nimport SidebarToogle from '@/components/Sidebar/SidebarToogle.vue';\n\ninterface PScrollBar {\n  $el: Element;\n  ps: {\n    contentHeight: number;\n    element: Element;\n  };\n}\n\nconst route = useRoute();\nconst router = useRouter();\nconst userStore = useUserStore();\nconst indexesStore = useIndexesStore();\nconst { t } = useI18n();\nconst { participants } = useGroup();\nconst groupMessageStore = useGroupMessageStore();\nconst { typingGroup } = useTyping();\nconst { resize } = useChat();\n\nconst group = ref<Group>();\nconst id = ref('');\nconst scrollbar = ref<PScrollBar>();\nconst syncInitial = ref<boolean>(false);\nconst loadingMessages = ref<boolean>(true);\nconst loadMessages = ref(false);\nconst oldScrollTop = ref(0);\nconst oldScrollHeigth = ref(0);\nconst scrollTimeout = ref<ReturnType<typeof setTimeout>>();\nconst scrollTop = ref<number>(0);\nconst lastStatusHasInternetConnection = ref(true);\nconst scrollingDown = ref(false);\n\nconst internetIntervalStatus = setInterval(async () => {\n  checkConnection();\n}, 30000);\n\nwindow.addEventListener('online', checkConnection);\nwindow.addEventListener('offline', checkConnection);\n\nasync function checkConnection() {\n  const isOnline = await checkInternetConnection();\n  if (isOnline && lastStatusHasInternetConnection.value === false) {\n    loadSyncInitMessages();\n  }\n\n  lastStatusHasInternetConnection.value = isOnline;\n}\n\nconst typing = computed(() => {\n  const routeName = route.name as string;\n  const groupId = parseInt(route.params.id as string, 10);\n  return typingGroup.value(routeName, groupId);\n});\n\nconst modal = ref(false);\nconst suppressScrollY = ref(false);\n\nconst daysMessages: ComputedRef<ChatGroupMessages[]> = computed(() => {\n  const groupMessages = collect(groupMessageStore.messages)\n    .sortBy('created_at')\n    .all();\n\n  const messages: ChatGroupMessages[] = [];\n\n  if (groupMessages.length === 0) return messages;\n\n  for (const row of groupMessages) {\n    messages.push({\n      ...row,\n      day: format(new Date(row.created_at), 'yyyyMMdd'),\n      minute: format(new Date(row.created_at), 'HHmm'),\n    });\n  }\n\n  return messages;\n});\n\nfunction showInfoPane() {\n  modal.value = true;\n}\n\nfunction setGroup() {\n  id.value = route.params.id as string;\n\n  if (id.value) {\n    groupMessageStore.setGroupId(parseInt(id.value));\n    group.value = userStore.groupById(parseInt(id.value));\n    if (group.value == undefined) {\n      router.push({ name: RouteName.Home });\n      toastError(t('Group not found'));\n    }\n  }\n}\n\nasync function toggleFavorite() {\n  if (group.value?.favorite) {\n    await useDeleteFavoriteGroup(group.value.id);\n\n    if (route.name === RouteName.FavoriteGroup) {\n      router.replace({ name: RouteName.Group, params: { id: id.value } });\n    }\n    return (group.value.favorite = false);\n  }\n  await useSetFavorite(group.value?.id.toString() as string, 'group');\n  (group.value as Group).favorite = true;\n}\n\nfunction loadSyncInitMessages() {\n  loadingMessages.value = true;\n  suppressScrollY.value = true;\n  syncInitial.value = true;\n  const dateCondition = route.query.dateCondition as string;\n  if (dateCondition) {\n    groupMessageStore.searchMessage(dateCondition);\n  } else {\n    groupMessageStore.getMessages();\n  }\n  setTimeout(() => {\n    const messageId = route.query.messageId as string;\n\n    loadingMessages.value = false;\n\n    if (messageId) {\n      scrollTo(messageId);\n      window.history.pushState({}, document.title, window.location.pathname);\n    }\n  }, 500);\n  suppressScrollY.value = false;\n}\n\nfunction scrollTo(messageId = '') {\n  setTimeout(() => {\n    if (scrollbar.value) {\n      const scrollHeightElement = messageId\n        ? getScrollHeight(messageId)\n        : scrollbar.value?.$el.scrollHeight;\n      scrollbar.value.$el.scrollTop =\n        scrollHeightElement - scrollbar.value.$el.clientHeight;\n    }\n  }, 100);\n}\n\nwatch(\n  () => route.params,\n  (newParams, oldParams) => {\n    if (\n      !Object.prototype.hasOwnProperty.call(route.params, 'id') ||\n      (route.name !== 'group' && route.name !== 'favorite-group')\n    ) {\n      return;\n    }\n    if (newParams.id === oldParams.id) {\n      return;\n    }\n    indexesStore.enableScrollLock();\n    setGroup();\n    groupMessageStore.readAllMessagesByGroupId(route.params.id as string);\n    loadSyncInitMessages();\n  },\n  { deep: true }\n);\n\nwatch(\n  () => groupMessageStore.messages,\n  (messages, oldMessages) => {\n    const scrollHeight =\n      (scrollbar.value?.$el.scrollHeight ?? 0) -\n      (scrollbar.value?.$el.clientHeight ?? 0);\n    const messageId = route.query.messageId as string;\n    nextTick(() => {\n      if (\n        !loadMessages.value &&\n        scrollTop.value >= 0.95 * scrollHeight &&\n        !messageId\n      ) {\n        scrollTo();\n      }\n      if (oldMessages?.length === 0) {\n        setTimeout(() => {\n          if (!messageId) return scrollTo();\n\n          scrollTo(messageId);\n          window.history.pushState(\n            {},\n            document.title,\n            window.location.pathname\n          );\n        }, 500);\n      }\n\n      if (\n        messages &&\n        messages.length > 0 &&\n        oldMessages &&\n        oldMessages.length > 0 &&\n        loadMessages.value &&\n        !scrollingDown.value\n      ) {\n        const newScrollHeight = (scrollbar.value as PScrollBar).$el\n          .scrollHeight;\n        const diffScrollHeight = newScrollHeight - oldScrollHeigth.value;\n        (scrollbar.value as PScrollBar).$el.scrollTop =\n          oldScrollTop.value + diffScrollHeight;\n      }\n    });\n    setTimeout(() => {\n      groupMessageStore.readAllMessagesByGroupId(route.params.id as string);\n    }, 200);\n  },\n  { deep: true }\n);\n\nonBeforeMount(() => {\n  setGroup();\n  loadSyncInitMessages();\n  /*groupMessageStore.getMessages().then(() => {\n    setTimeout(() => {\n      loadingMessages.value = false;\n    }, 500);\n  });*/\n  groupMessageStore.readAllMessagesByGroupId(route.params.id as string);\n});\n\nonBeforeUnmount(() => {\n  clearInterval(internetIntervalStatus);\n});\n\nasync function scrollUp(event: Event) {\n  clearTimeout(scrollTimeout.value);\n  indexesStore.disableScrollLock();\n  const target = event.target as HTMLDivElement;\n  scrollTop.value = target.scrollTop;\n  const scrollHeight = target.scrollHeight;\n\n  if (loadMessages.value) return;\n\n  if (\n    scrollTop.value <= 0.15 * scrollHeight &&\n    scrollTop.value >= 0.1 * scrollHeight\n  ) {\n    loadMessages.value = true;\n    oldScrollTop.value = scrollTop.value;\n    oldScrollHeigth.value = scrollHeight;\n    await groupMessageStore.getBatchGroupMessages('oldest');\n\n    setTimeout(() => {\n      loadMessages.value = false;\n    }, 2.5 * Time.Second);\n  }\n}\n\nasync function scrollDown(event: Event) {\n  clearTimeout(scrollTimeout.value);\n  if (syncInitial.value) {\n    syncInitial.value = false;\n    return;\n  }\n\n  if (loadMessages.value) return;\n\n  const target = event.target as HTMLDivElement;\n  const offsetHeight = target.offsetHeight;\n  scrollTop.value = target.scrollTop;\n  const scrollHeight = target.scrollHeight;\n  if (\n    offsetHeight + scrollTop.value >= 0.85 * scrollHeight &&\n    offsetHeight + scrollTop.value <= 0.95 * scrollHeight\n  ) {\n    loadMessages.value = true;\n    oldScrollTop.value = scrollTop.value;\n    oldScrollHeigth.value = scrollHeight;\n    scrollingDown.value = true;\n    groupMessageStore.readAllMessagesByGroupId(route.params.id as string);\n    await groupMessageStore.getBatchGroupMessages('newest');\n    setTimeout(() => {\n      loadMessages.value = false;\n      scrollingDown.value = false;\n    }, 2.5 * Time.Second);\n  }\n\n  if (offsetHeight + scrollTop.value >= 0.98 * scrollHeight) {\n    indexesStore.enableScrollLock();\n  }\n}\n\nconst panelRef = ref<HTMLDivElement>();\nconst panelWidth = ref(0);\nconst { width } = useElementSize(panelRef);\n\nwatch(width, (value) => (panelWidth.value = value));\nwatch(typing, (newTyping) => {\n  const scrollHeight =\n    (scrollbar.value?.$el.scrollHeight ?? 0) -\n    (scrollbar.value?.$el.clientHeight ?? 0);\n  if (newTyping.length > 0 && scrollTop.value >= 0.95 * scrollHeight) {\n    scrollTo();\n  }\n});\n\nfunction getScrollHeight(id: string) {\n  const element = document.querySelector<HTMLElement>(`[data-message=\"${id}\"]`);\n\n  let scrollHeightElement = 0;\n  if (element) {\n    const offsetTopElement = element.offsetTop;\n    const clientHeightElement = element.clientHeight;\n    scrollHeightElement = offsetTopElement + clientHeightElement;\n  }\n\n  return scrollHeightElement > 0 ? scrollHeightElement : 0;\n}\n\nfunction changeHeight(diff: number) {\n  if (scrollbar.value) {\n    const scrollTop = scrollbar.value.$el.scrollTop;\n    scrollbar.value.$el.scrollTop = scrollTop + diff;\n  }\n}\n\nonMounted(() => {\n  resize();\n});\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/assets/sass/chat.scss';\n</style>\n"],"names":["maxNumberOfParticipants","props","__props","t","useI18n","indexesStore","useIndexesStore","getNameByUserId","useUserStore","acceptConference","useGroupMessageStore","contentObject","computed","content","a","b","titlePlusUsers","showPlusIcon","plusUsers","obj1","obj2","titlePlusUsersString","participant","joinConference","textStatusMessage","duration","Time","format","capitalize","fileData","filesAttachments","modalDeleteAttachment","deleteAttachmentIsIsVisible","setDeleteAttachmentIsOpen","handleGroupDeleteAttachment","handleSelectedAttachment","onMouseover","onMouseLeave","useAttachmentsComponent","avatar","useAvatar","chatGroupMessage","messageParsed","message","Color","userStore","route","useRoute","typingGroup","typingGroupUserId","useTyping","routeName","ref","groupId","isTyping","getClassArticle","groupMessage","isFirstMessageOfTheDay","groupMessages","index","currentDateFormatted","previousDateFormatted","hasAvatar","currentType","previousType","currentSourceUser","previousSourceUser","currentTimeFormatted","previousTimeFormatted","hasTime","indexLastElement","nextType","nextDateFormatted","nextSourceUser","nextTimeFormatted","hasName","watchEffect","emit","__emit","modal","search","id","users","usersColumn","searching","event","word","_a","_b","user","hideModal","watch","value","onMounted","router","useRouter","participants","useGroup","groupMessageStore","resize","useChat","group","scrollbar","syncInitial","loadingMessages","loadMessages","oldScrollTop","oldScrollHeigth","scrollTimeout","scrollTop","lastStatusHasInternetConnection","scrollingDown","internetIntervalStatus","checkConnection","isOnline","checkInternetConnection","loadSyncInitMessages","typing","suppressScrollY","daysMessages","collect","messages","row","showInfoPane","setGroup","RouteName","toastError","toggleFavorite","useDeleteFavoriteGroup","useSetFavorite","dateCondition","messageId","scrollTo","scrollHeightElement","getScrollHeight","newParams","oldParams","oldMessages","scrollHeight","nextTick","diffScrollHeight","onBeforeMount","onBeforeUnmount","scrollUp","target","scrollDown","offsetHeight","panelRef","panelWidth","width","useElementSize","newTyping","element","offsetTopElement","clientHeightElement","changeHeight","diff"],"mappings":"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"}