{"version":3,"file":"PresenceVideo-m2skjI0f.js","sources":["../../src/components/Presence/PresenceCall.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {\n  TooltipArrow,\n  TooltipContent,\n  TooltipPortal,\n  TooltipProvider,\n  TooltipRoot,\n  TooltipTrigger,\n} from 'radix-vue';\nimport IPhone from '@/components/Icons/IPhone.vue';\nimport { useSubscribeStore, useUserStore, useWebrtcStore } from '@/stores';\nimport { computed } from 'vue';\n\ninterface Props {\n  state: 'early' | 'confirmed' | 'terminated';\n  localNumber: string;\n  remoteNumber: string;\n  direction: 'initiator' | 'recipient';\n  userId: string;\n}\n\nconst subscribeStore = useSubscribeStore();\n\ndefineProps<Props>();\n\nfunction isMyNumber(\n  localNumber: Props['localNumber'],\n  remoteNumber: Props['remoteNumber']\n) {\n  const userStore = useUserStore();\n\n  return userStore.myNumbers.some(\n    (number) =>\n      number.numbersUnmasked === remoteNumber ||\n      number.numbersUnmasked === localNumber\n  );\n}\n\nconst isOnACall = computed(() => {\n  return (\n    state: Props['state'],\n    direction: Props['direction'],\n    remoteNumber: Props['remoteNumber'],\n    userId: Props['userId']\n  ) => {\n    const userStore = useUserStore();\n    const isConfirmed = state === 'confirmed';\n    const isRecipient = direction === 'recipient';\n    const callsPresence = subscribeStore.callsPresence[userId];\n\n    return (\n      isConfirmed ||\n      (!isConfirmed &&\n        ((isRecipient &&\n          userStore.myNumbers.some(\n            ({ numbersUnmasked }) => numbersUnmasked === remoteNumber\n          )) ||\n          (!isRecipient &&\n            callsPresence.every(({ state }) => state !== 'confirmed'))))\n    );\n  };\n});\n\nconst isTakeIncomingCall = computed(() => {\n  return (state: Props['state'], direction: Props['direction']) =>\n    state === 'early' && direction === 'recipient';\n});\n\nfunction presenceAnswerCall(\n  localNumber: Props['localNumber'],\n  remoteNumber: Props['localNumber'],\n  state: Props['state']\n) {\n  if (state !== 'early' || isMyNumber(localNumber, remoteNumber)) return;\n\n  const webrtcStore = useWebrtcStore();\n  const number = `*89${localNumber}`;\n  webrtcStore.userAgentActive.ua.call(number);\n}\n</script>\n\n<template>\n  <TooltipProvider\n    v-if=\"\n      isOnACall(state, direction, remoteNumber, userId) ||\n      isTakeIncomingCall(state, direction)\n    \"\n  >\n    <TooltipRoot :delay-duration=\"10\">\n      <TooltipTrigger\n        class=\"IconButton\"\n        @click=\"presenceAnswerCall(localNumber, remoteNumber, state)\"\n      >\n        <IPhone v-if=\"isOnACall(state, direction, remoteNumber, userId)\" />\n        <svg\n          v-else-if=\"isTakeIncomingCall(state, direction)\"\n          width=\"18\"\n          height=\"18\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path\n            d=\"M14.9668 11.5666C14.8037 11.3928 14.2278 10.8791 13.169 10.1994C12.1025 9.51377 11.3159 9.08627 11.0903 8.98658C11.0704 8.97776 11.0485 8.97453 11.0269 8.97722C11.0053 8.97992 10.9849 8.98845 10.9678 9.00189C10.6044 9.28533 9.99247 9.80596 9.95966 9.83408C9.74779 10.0156 9.74779 10.0156 9.57435 9.95908C9.26935 9.85908 8.32185 9.35596 7.49623 8.52846C6.6706 7.70096 6.14154 6.73002 6.04154 6.42533C5.98435 6.25158 5.98435 6.25158 6.16654 6.03971C6.19466 6.00689 6.7156 5.39502 6.99904 5.03189C7.01248 5.01479 7.02101 4.99435 7.02371 4.97277C7.02641 4.95119 7.02317 4.92928 7.01435 4.90939C6.91466 4.68346 6.48716 3.89721 5.80154 2.83064C5.12091 1.77221 4.60779 1.19627 4.43404 1.03314C4.41809 1.0181 4.39839 1.00763 4.37699 1.00285C4.3556 0.998062 4.33331 0.999136 4.31248 1.00596C3.70512 1.21467 3.11912 1.48099 2.56248 1.80127C2.02511 2.11365 1.51636 2.47286 1.04216 2.87471C1.02561 2.88878 1.0132 2.90709 1.00626 2.92768C0.999327 2.94827 0.998126 2.97036 1.00279 2.99158C1.0681 3.29596 1.38029 4.56658 2.34904 6.32658C3.33748 8.12283 4.02248 9.04314 5.47404 10.4897C6.9256 11.9363 7.87498 12.6625 9.6731 13.651C11.4331 14.6197 12.7044 14.9322 13.0081 14.9969C13.0294 15.0015 13.0515 15.0003 13.0721 14.9934C13.0928 14.9864 13.1111 14.974 13.1253 14.9575C13.5271 14.4833 13.8862 13.9746 14.1984 13.4372C14.5186 12.8805 14.7849 12.2945 14.9937 11.6872C15.0004 11.6665 15.0014 11.6444 14.9967 11.6232C14.992 11.602 14.9817 11.5825 14.9668 11.5666V11.5666Z\"\n            fill=\"currentColor\"\n          >\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0;1\"\n              dur=\"0.75s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </svg>\n      </TooltipTrigger>\n      <TooltipPortal>\n        <TooltipContent as-child class=\"TooltipContent\" :side-offset=\"-15\">\n          <ul>\n            <template v-if=\"isOnACall(state, direction, remoteNumber, userId)\">\n              On a call\n            </template>\n            <template v-else-if=\"isTakeIncomingCall(state, direction)\">\n              Take incoming call\n            </template>\n            <TooltipArrow class=\"TooltipArrow\" size=\"8\" />\n          </ul>\n        </TooltipContent>\n      </TooltipPortal>\n    </TooltipRoot>\n  </TooltipProvider>\n</template>\n\n<style scoped>\n/* reset */\nbutton {\n  all: unset;\n  line-height: normal;\n}\n\n.TooltipContent {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  padding: 6px 8px;\n  border-radius: 4px;\n  background-color: var(--background-dark);\n  color: var(--white-500);\n  font-size: 12px;\n  user-select: none;\n  animation-duration: 50ms;\n  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n  will-change: transform, opacity;\n}\n.TooltipContent[data-state='delayed-open'][data-side='top'] {\n  animation-name: slideDownAndFade;\n}\n.TooltipContent[data-state='delayed-open'][data-side='right'] {\n  animation-name: slideLeftAndFade;\n}\n.TooltipContent[data-state='delayed-open'][data-side='bottom'] {\n  animation-name: slideUpAndFade;\n}\n.TooltipContent[data-state='delayed-open'][data-side='left'] {\n  animation-name: slideRightAndFade;\n}\n\n.TooltipContent :deep(.TooltipArrow) {\n  fill: var(--background-dark);\n}\n\n.IconButton {\n  cursor: pointer;\n}\n\n.IconButton :deep(svg) {\n  width: 18px;\n  height: 18px;\n}\n\n.IconButton :deep(svg path) {\n  fill: var(--presence-call);\n}\n\n@keyframes slideUpAndFade {\n  from {\n    opacity: 0;\n    transform: translateY(2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideRightAndFade {\n  from {\n    opacity: 0;\n    transform: translateX(-2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideDownAndFade {\n  from {\n    opacity: 0;\n    transform: translateY(-2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideLeftAndFade {\n  from {\n    opacity: 0;\n    transform: translateX(2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n</style>\n"],"names":["subscribeStore","useSubscribeStore","isMyNumber","localNumber","remoteNumber","useUserStore","number","isOnACall","computed","state","direction","userId","userStore","isConfirmed","isRecipient","callsPresence","numbersUnmasked","isTakeIncomingCall","presenceAnswerCall","webrtcStore","useWebrtcStore"],"mappings":"ynEAqBA,MAAMA,EAAiBC,IAId,SAAAC,EACPC,EACAC,EACA,CAGA,OAFkBC,IAED,UAAU,KACxBC,GACCA,EAAO,kBAAoBF,GAC3BE,EAAO,kBAAoBH,CAAA,CAEjC,CAEM,MAAAI,EAAYC,EAAS,IAClB,CACLC,EACAC,EACAN,EACAO,IACG,CACH,MAAMC,EAAYP,IACZQ,EAAcJ,IAAU,YACxBK,EAAcJ,IAAc,YAC5BK,EAAgBf,EAAe,cAAcW,CAAM,EAEzD,OACEE,GACC,CAACA,IACEC,GACAF,EAAU,UAAU,KAClB,CAAC,CAAE,gBAAAI,KAAsBA,IAAoBZ,CAC/C,GACC,CAACU,GACAC,EAAc,MAAM,CAAC,CAAE,MAAAN,KAAYA,IAAU,WAAW,EAAA,CAGnE,EAEKQ,EAAqBT,EAAS,IAC3B,CAACC,EAAuBC,IAC7BD,IAAU,SAAWC,IAAc,WACtC,EAEQ,SAAAQ,EACPf,EACAC,EACAK,EACA,CACA,GAAIA,IAAU,SAAWP,EAAWC,EAAaC,CAAY,EAAG,OAEhE,MAAMe,EAAcC,IACdd,EAAS,MAAMH,CAAW,GACpBgB,EAAA,gBAAgB,GAAG,KAAKb,CAAM,CAC5C"}